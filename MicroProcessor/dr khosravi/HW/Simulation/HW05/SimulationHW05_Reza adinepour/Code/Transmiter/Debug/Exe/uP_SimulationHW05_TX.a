;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;//#include <alcd.h>
;#include <delay.h>
;#include <stdio.h>
;
;
;
;unsigned char code[17], i, flag = 0;
;
;
;interrupt [EXT_INT0] void ext_int0_isr(void)
; 0000 000C {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 000D     if(flag == 0)
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 000E     {
; 0000 000F         code[i] = PINA & 0x0f;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
; 0000 0010         switch(code[i])
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0011         {
; 0000 0012             case 0:
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0013                 code[i] = 7;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0014                 //lcd_putchar('7');
; 0000 0015                 putchar(code[i]);
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0016             break;
;PCODE: $00000028 VOL: 0
; 0000 0017             case 1:
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0018                 code[i] = 4;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0019                 //lcd_putchar('4');
; 0000 001A                 putchar(code[i]);
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 001B             break;
;PCODE: $00000036 VOL: 0
; 0000 001C             case 2:
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 001D                 code[i] = 1;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 001E                 //lcd_putchar('1');
; 0000 001F                 putchar(code[i]);
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0020             break;
;PCODE: $00000044 VOL: 0
; 0000 0021             case 3:
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0022                 code[i] = 'F';
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0023                 //lcd_putchar('F');
; 0000 0024                 putchar(code[i]);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0025             break;
;PCODE: $00000052 VOL: 0
; 0000 0026             case 4:
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0027                 code[i] = 8;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0028                 //lcd_putchar('8');
; 0000 0029                 putchar(code[i]);
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 002A             break;
;PCODE: $00000060 VOL: 0
; 0000 002B             case 5:
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 002C                 code[i] = 5;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 002D                 //lcd_putchar('5');
; 0000 002E                 putchar(code[i]);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 002F             break;
;PCODE: $0000006E VOL: 0
; 0000 0030             case 6:
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0031                 code[i] = 2;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0032                 //lcd_putchar('2');
; 0000 0033                 putchar(code[i]);
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0034             break;
;PCODE: $0000007C VOL: 0
; 0000 0035             case 7:
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0036                 code[i] = 0;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0037                 //lcd_putchar('0');
; 0000 0038                 putchar(code[i]);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 0039             break;
;PCODE: $0000008A VOL: 0
; 0000 003A             case 8:
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 003B                 code[i] = 9;
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 003C                 //lcd_putchar('9');
; 0000 003D                 putchar(code[i]);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 003E             break;
;PCODE: $00000098 VOL: 0
; 0000 003F             case 9:
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 0040                 code[i] = 6;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0041                 //lcd_putchar('6');
; 0000 0042                 putchar(code[i]);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0043             break;
;PCODE: $000000A6 VOL: 0
; 0000 0044             case 10:
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 0045                 code[i] = 3;
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0046                 //lcd_putchar('3');
; 0000 0047                 putchar(code[i]);
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0048             break;
;PCODE: $000000B4 VOL: 0
; 0000 0049             case 11:
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 004A                 code[i] = 'N';
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
; 0000 004B                 //lcd_putchar('N');
; 0000 004C                 putchar(code[i]);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 004D             break;
;PCODE: $000000C2 VOL: 0
; 0000 004E             case 12:
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 004F                 code[i] = 'A';
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 0050                 //lcd_putchar('A');
; 0000 0051                 putchar(code[i]);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0052             break;
;PCODE: $000000D0 VOL: 0
; 0000 0053             case 13:
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 0054                 code[i] = 'L';
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
; 0000 0055                 //lcd_putchar('L');
; 0000 0056                 putchar(code[i]);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0057             break;
;PCODE: $000000DE VOL: 0
; 0000 0058             case 14:
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0059                 code[i] = 'P';
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 005A                 //lcd_putchar('P');
; 0000 005B                 putchar(code[i]);
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 005C             break;
;PCODE: $000000EC VOL: 0
; 0000 005D             case 15:
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 005E                 code[i] = 'O';
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 005F                 //lcd_putchar('O');
; 0000 0060                 putchar(code[i]);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0061         }
;PCODE: $000000FA VOL: 0
; 0000 0062         i++;
;PCODE: $000000FB VOL: 0
; 0000 0063     }
; 0000 0064 
; 0000 0065 }
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;
;#include <stdio.h>
;
;void main(void)
; 0000 006A {
;PCODE: $00000100 VOL: 0
; 0000 006B 
; 0000 006C 
; 0000 006D     // External Interrupt(s) initialization
; 0000 006E     // INT0: On
; 0000 006F     // INT0 Mode: Falling Edge
; 0000 0070     // INT1: Off
; 0000 0071     // INT2: Off
; 0000 0072     GICR|=(0<<INT1) | (1<<INT0) | (0<<INT2);
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
; 0000 0073     MCUCR=(0<<ISC11) | (0<<ISC10) | (1<<ISC01) | (0<<ISC00);
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
; 0000 0074     MCUCSR=(0<<ISC2);
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0075     GIFR=(0<<INTF1) | (1<<INTF0) | (0<<INTF2);
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 0076 
; 0000 0077     // USART initialization
; 0000 0078     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0079     // USART Receiver: Off
; 0000 007A     // USART Transmitter: On
; 0000 007B     // USART Mode: Asynchronous
; 0000 007C     // USART Baud Rate: 9600
; 0000 007D     UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 007E     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 007F     UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 0080     UBRRH=0x00;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 0081     UBRRL=0x33;
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 0082 
; 0000 0083     //lcd_init(16);
; 0000 0084 
; 0000 0085     #asm("sei")
;PCODE: $00000114 VOL: 0
	sei
;PCODE: $00000115 VOL: 0
; 0000 0086 
; 0000 0087     while (1)
;PCODE: $00000116 VOL: 0
; 0000 0088     {
; 0000 0089         if(i == 17)
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 008A         {
; 0000 008B             i = 0;
;PCODE: $0000011A VOL: 0
; 0000 008C             flag = 1;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 008D             //lcd_clear();
; 0000 008E             delay_ms(5000);
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 008F             flag = 0;
;PCODE: $0000011F VOL: 0
; 0000 0090         }
; 0000 0091     }
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
; 0000 0092 }
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
