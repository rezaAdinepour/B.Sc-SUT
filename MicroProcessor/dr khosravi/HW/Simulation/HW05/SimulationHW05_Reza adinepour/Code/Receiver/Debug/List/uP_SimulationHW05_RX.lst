
AVRASM ver. 2.1.30  E:\University\Electerical\MicroProcessor\Dr Khosravi\HW\Simulation\HW05\SimulationHW05_Reza adinepour\Code\Test\TX\Code\C\RX\Debug\List\uP_SimulationHW05_RX.asm Mon Dec 06 16:05:30 2021

E:\University\Electerical\MicroProcessor\Dr Khosravi\HW\Simulation\HW05\SimulationHW05_Reza adinepour\Code\Test\TX\Code\C\RX\Debug\List\uP_SimulationHW05_RX.asm(1088): warning: Register r5 already defined by the .DEF directive
E:\University\Electerical\MicroProcessor\Dr Khosravi\HW\Simulation\HW05\SimulationHW05_Reza adinepour\Code\Test\TX\Code\C\RX\Debug\List\uP_SimulationHW05_RX.asm(1089): warning: Register r4 already defined by the .DEF directive
E:\University\Electerical\MicroProcessor\Dr Khosravi\HW\Simulation\HW05\SimulationHW05_Reza adinepour\Code\Test\TX\Code\C\RX\Debug\List\uP_SimulationHW05_RX.asm(1090): warning: Register r7 already defined by the .DEF directive
E:\University\Electerical\MicroProcessor\Dr Khosravi\HW\Simulation\HW05\SimulationHW05_Reza adinepour\Code\Test\TX\Code\C\RX\Debug\List\uP_SimulationHW05_RX.asm(1091): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _cm=R5
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R7
                 	.DEF __lcd_maxx=R6
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0067 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G101:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G101:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x0:
000033 6e49
000034 6176
000035 696c
000036 2064      	.DB  0x49,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000037 6f43
000038 6d6d
000039 6e61
00003a 0064      	.DB  0x43,0x6F,0x6D,0x6D,0x61,0x6E,0x64,0x0
                 _0x2000003:
00003b c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
00003c 0010      	.DW  0x10
00003d 0260      	.DW  _0xE1
00003e 0066      	.DW  _0x0*2
                 
00003f 0010      	.DW  0x10
000040 0270      	.DW  _0xE1+16
000041 0066      	.DW  _0x0*2
                 
000042 0010      	.DW  0x10
000043 0280      	.DW  _0xE1+32
000044 0066      	.DW  _0x0*2
                 
000045 0010      	.DW  0x10
000046 0290      	.DW  _0xE1+48
000047 0066      	.DW  _0x0*2
                 
000048 0010      	.DW  0x10
000049 02a0      	.DW  _0xE1+64
00004a 0066      	.DW  _0x0*2
                 
00004b 0010      	.DW  0x10
00004c 02b0      	.DW  _0xE1+80
00004d 0066      	.DW  _0x0*2
                 
00004e 0010      	.DW  0x10
00004f 02c0      	.DW  _0xE1+96
000050 0066      	.DW  _0x0*2
                 
000051 0010      	.DW  0x10
000052 02d0      	.DW  _0xE1+112
000053 0066      	.DW  _0x0*2
                 
000054 0010      	.DW  0x10
000055 02e0      	.DW  _0xE1+128
000056 0066      	.DW  _0x0*2
                 
000057 0010      	.DW  0x10
000058 02f0      	.DW  _0xE1+144
000059 0066      	.DW  _0x0*2
                 
00005a 0010      	.DW  0x10
00005b 0300      	.DW  _0xE1+160
00005c 0066      	.DW  _0x0*2
                 
00005d 0010      	.DW  0x10
00005e 0310      	.DW  _0xE1+176
00005f 0066      	.DW  _0x0*2
                 
000060 0010      	.DW  0x10
000061 0320      	.DW  _0xE1+192
000062 0066      	.DW  _0x0*2
                 
000063 0002      	.DW  0x02
000064 0330      	.DW  __base_y_G100
000065 0076      	.DW  _0x2000003*2
                 
                 _0xFFFFFFFF:
000066 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000067 94f8      	CLI
000068 27ee      	CLR  R30
000069 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00006a e0f1      	LDI  R31,1
00006b bffb      	OUT  GICR,R31
00006c bfeb      	OUT  GICR,R30
00006d bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00006e e08d      	LDI  R24,(14-2)+1
00006f e0a2      	LDI  R26,2
000070 27bb      	CLR  R27
                 __CLEAR_REG:
000071 93ed      	ST   X+,R30
000072 958a      	DEC  R24
000073 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000074 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000075 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000076 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000077 93ed      	ST   X+,R30
000078 9701      	SBIW R24,1
000079 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00007a e7e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00007b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00007c 9185      	LPM  R24,Z+
00007d 9195      	LPM  R25,Z+
00007e 9700      	SBIW R24,0
00007f f061      	BREQ __GLOBAL_INI_END
000080 91a5      	LPM  R26,Z+
000081 91b5      	LPM  R27,Z+
000082 9005      	LPM  R0,Z+
000083 9015      	LPM  R1,Z+
000084 01bf      	MOVW R22,R30
000085 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000086 9005      	LPM  R0,Z+
000087 920d      	ST   X+,R0
000088 9701      	SBIW R24,1
000089 f7e1      	BRNE __GLOBAL_INI_LOOP
00008a 01fb      	MOVW R30,R22
00008b cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00008c e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00008d bfed      	OUT  SPL,R30
00008e e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00008f bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000090 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000091 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000092 940c 0094 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <alcd.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;
                 ;
                 ;unsigned char cm;
                 ;
                 ;void main(void)
                 ; 0000 000A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 000B     DDRA = 0x00;
000094 e0e0      	LDI  R30,LOW(0)
000095 bbea      	OUT  0x1A,R30
                 ; 0000 000C     PORTA = 0x00;
000096 bbeb      	OUT  0x1B,R30
                 ; 0000 000D 
                 ; 0000 000E     DDRB = 0x00;
000097 bbe7      	OUT  0x17,R30
                 ; 0000 000F     PORTB = 0x00;
000098 bbe8      	OUT  0x18,R30
                 ; 0000 0010 
                 ; 0000 0011     DDRC = 0x0ff;
000099 efef      	LDI  R30,LOW(255)
00009a bbe4      	OUT  0x14,R30
                 ; 0000 0012     PORTC = 0x00;
00009b e0e0      	LDI  R30,LOW(0)
00009c bbe5      	OUT  0x15,R30
                 ; 0000 0013 
                 ; 0000 0014     DDRD = 0x00;
00009d bbe1      	OUT  0x11,R30
                 ; 0000 0015     PORTD = 0x00;
00009e bbe2      	OUT  0x12,R30
                 ; 0000 0016 
                 ; 0000 0017     // USART initialization
                 ; 0000 0018     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0019     // USART Receiver: On
                 ; 0000 001A     // USART Transmitter: Off
                 ; 0000 001B     // USART Mode: Asynchronous
                 ; 0000 001C     // USART Baud Rate: 9600
                 ; 0000 001D     UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
00009f b9eb      	OUT  0xB,R30
                 ; 0000 001E     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
0000a0 e1e0      	LDI  R30,LOW(16)
0000a1 b9ea      	OUT  0xA,R30
                 ; 0000 001F     UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
0000a2 e8e6      	LDI  R30,LOW(134)
0000a3 bde0      	OUT  0x20,R30
                 ; 0000 0020     UBRRH=0x00;
0000a4 e0e0      	LDI  R30,LOW(0)
0000a5 bde0      	OUT  0x20,R30
                 ; 0000 0021     UBRRL=0x33;
0000a6 e3e3      	LDI  R30,LOW(51)
0000a7 b9e9      	OUT  0x9,R30
                 ; 0000 0022 
                 ; 0000 0023     lcd_init(16);
0000a8 e1a0      	LDI  R26,LOW(16)
0000a9 940e 0343 	CALL _lcd_init
                 ; 0000 0024 
                 ; 0000 0025     while (1)
                 _0x3:
                 ; 0000 0026     {
                 ; 0000 0027         cm = getchar();
0000ab 940e 0375 	CALL SUBOPT_0x0
                 ; 0000 0028         switch(cm)
                 ; 0000 0029         {
                 ; 0000 002A             case 'A':
0000ad 34e1      	CPI  R30,LOW(0x41)
0000ae e0a0      	LDI  R26,HIGH(0x41)
0000af 07fa      	CPC  R31,R26
0000b0 f441      	BRNE _0x9
                 ; 0000 002B                 lcd_clear();
0000b1 940e 0311 	CALL _lcd_clear
                 ; 0000 002C                 lcd_putchar('A');
0000b3 e4a1      	LDI  R26,LOW(65)
0000b4 940e 031d 	CALL _lcd_putchar
                 ; 0000 002D                 PORTC = 0xff;
0000b6 efef      	LDI  R30,LOW(255)
0000b7 bbe5      	OUT  0x15,R30
                 ; 0000 002E             break;
0000b8 c229      	RJMP _0x8
                 ; 0000 002F 
                 ; 0000 0030             case 'L':
                 _0x9:
0000b9 34ec      	CPI  R30,LOW(0x4C)
0000ba e0a0      	LDI  R26,HIGH(0x4C)
0000bb 07fa      	CPC  R31,R26
0000bc f441      	BRNE _0xA
                 ; 0000 0031                 lcd_clear();
0000bd 940e 0311 	CALL _lcd_clear
                 ; 0000 0032                 lcd_putchar('L');
0000bf e4ac      	LDI  R26,LOW(76)
0000c0 940e 031d 	CALL _lcd_putchar
                 ; 0000 0033                 PORTC = 0x00;
0000c2 e0e0      	LDI  R30,LOW(0)
0000c3 bbe5      	OUT  0x15,R30
                 ; 0000 0034             break;
0000c4 c21d      	RJMP _0x8
                 ; 0000 0035 
                 ; 0000 0036             case 'P':
                 _0xA:
0000c5 35e0      	CPI  R30,LOW(0x50)
0000c6 e0a0      	LDI  R26,HIGH(0x50)
0000c7 07fa      	CPC  R31,R26
0000c8 f009      	BREQ PC+2
0000c9 c1ab      	RJMP _0xB
                 ; 0000 0037                 lcd_clear();
0000ca 940e 0311 	CALL _lcd_clear
                 ; 0000 0038                 lcd_putchar('P');
0000cc e5a0      	LDI  R26,LOW(80)
0000cd 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0039                 cm = getchar();
                 ; 0000 003A                 switch(cm)
                 ; 0000 003B                 {
                 ; 0000 003C                     case 0:
0000cf 9730      	SBIW R30,0
0000d0 f599      	BRNE _0xF
                 ; 0000 003D                         lcd_putchar('0');
0000d1 e3a0      	LDI  R26,LOW(48)
0000d2 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 003E                         cm = getchar();
                 ; 0000 003F                         switch(cm)
                 ; 0000 0040                         {
                 ; 0000 0041                             case 'O':
0000d4 34ef      	CPI  R30,LOW(0x4F)
0000d5 e0a0      	LDI  R26,HIGH(0x4F)
0000d6 07fa      	CPC  R31,R26
0000d7 f4a9      	BRNE _0x13
                 ; 0000 0042                                 lcd_putchar('O');
0000d8 e4af      	LDI  R26,LOW(79)
0000d9 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0043                                 cm = getchar();
                 ; 0000 0044                                 switch(cm)
                 ; 0000 0045                                 {
                 ; 0000 0046                                     case 'N':
0000db 34ee      	CPI  R30,LOW(0x4E)
0000dc e0a0      	LDI  R26,HIGH(0x4E)
0000dd 07fa      	CPC  R31,R26
0000de f429      	BRNE _0x17
                 ; 0000 0047                                         lcd_putchar('N');
0000df e4ae      	LDI  R26,LOW(78)
0000e0 940e 031d 	CALL _lcd_putchar
                 ; 0000 0048                                         PORTC.0 = 1;
0000e2 9aa8      	SBI  0x15,0
                 ; 0000 0049                                     break;
0000e3 c008      	RJMP _0x16
                 ; 0000 004A 
                 ; 0000 004B                                     case 'F':
                 _0x17:
0000e4 34e6      	CPI  R30,LOW(0x46)
0000e5 e0a0      	LDI  R26,HIGH(0x46)
0000e6 07fa      	CPC  R31,R26
0000e7 f421      	BRNE _0x16
                 ; 0000 004C                                         lcd_putchar('F');
0000e8 e4a6      	LDI  R26,LOW(70)
0000e9 940e 031d 	CALL _lcd_putchar
                 ; 0000 004D                                         PORTC.0 = 0;
0000eb 98a8      	CBI  0x15,0
                 ; 0000 004E                                     break;
                 ; 0000 004F                                 }
                 _0x16:
                 ; 0000 0050                             break;
0000ec c016      	RJMP _0x12
                 ; 0000 0051 
                 ; 0000 0052                             case 0:
                 _0x13:
0000ed 9730      	SBIW R30,0
0000ee f4a1      	BRNE _0x12
                 ; 0000 0053                                 lcd_putchar('B');
0000ef e4a2      	LDI  R26,LOW(66)
0000f0 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0054                                 cm = getchar();
                 ; 0000 0055                                 switch(cm)
                 ; 0000 0056                                 {
                 ; 0000 0057                                     case 'L':
0000f2 34ec      	CPI  R30,LOW(0x4C)
0000f3 e0a0      	LDI  R26,HIGH(0x4C)
0000f4 07fa      	CPC  R31,R26
0000f5 f469      	BRNE _0x20
                 ; 0000 0058                                         lcd_putchar('L');
0000f6 e4ac      	LDI  R26,LOW(76)
0000f7 940e 031d 	CALL _lcd_putchar
                 ; 0000 0059                                         while(cm == 'L')
                 _0x22:
0000f9 e4ec      	LDI  R30,LOW(76)
0000fa 15e5      	CP   R30,R5
0000fb f439      	BRNE _0x24
                 ; 0000 005A                                         {
                 ; 0000 005B                                             PORTC.0 = 1;
0000fc 9aa8      	SBI  0x15,0
                 ; 0000 005C                                             delay_ms(150);
0000fd 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 005D                                             PORTC.0 = 0;
0000ff 98a8      	CBI  0x15,0
                 ; 0000 005E                                             delay_ms(150);
000100 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 005F                                         }
000102 cff6      	RJMP _0x22
                 _0x24:
                 ; 0000 0060 
                 ; 0000 0061                                 }
                 _0x20:
                 ; 0000 0062                             break;
                 ; 0000 0063                         }
                 _0x12:
                 ; 0000 0064                     break;
000103 c170      	RJMP _0xE
                 ; 0000 0065 
                 ; 0000 0066                     case 1:
                 _0xF:
000104 30e1      	CPI  R30,LOW(0x1)
000105 e0a0      	LDI  R26,HIGH(0x1)
000106 07fa      	CPC  R31,R26
000107 f599      	BRNE _0x29
                 ; 0000 0067                         lcd_putchar('1');
000108 e3a1      	LDI  R26,LOW(49)
000109 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0068                         cm = getchar();
                 ; 0000 0069                             switch(cm)
                 ; 0000 006A                             {
                 ; 0000 006B                                 case 'O':
00010b 34ef      	CPI  R30,LOW(0x4F)
00010c e0a0      	LDI  R26,HIGH(0x4F)
00010d 07fa      	CPC  R31,R26
00010e f4a9      	BRNE _0x2D
                 ; 0000 006C                                     lcd_putchar('O');
00010f e4af      	LDI  R26,LOW(79)
000110 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 006D                                     cm = getchar();
                 ; 0000 006E                                     switch(cm)
                 ; 0000 006F                                     {
                 ; 0000 0070                                         case 'N':
000112 34ee      	CPI  R30,LOW(0x4E)
000113 e0a0      	LDI  R26,HIGH(0x4E)
000114 07fa      	CPC  R31,R26
000115 f429      	BRNE _0x31
                 ; 0000 0071                                             lcd_putchar('N');
000116 e4ae      	LDI  R26,LOW(78)
000117 940e 031d 	CALL _lcd_putchar
                 ; 0000 0072                                             PORTC.1 = 1;
000119 9aa9      	SBI  0x15,1
                 ; 0000 0073                                         break;
00011a c008      	RJMP _0x30
                 ; 0000 0074 
                 ; 0000 0075                                         case 'F':
                 _0x31:
00011b 34e6      	CPI  R30,LOW(0x46)
00011c e0a0      	LDI  R26,HIGH(0x46)
00011d 07fa      	CPC  R31,R26
00011e f421      	BRNE _0x30
                 ; 0000 0076                                             lcd_putchar('F');
00011f e4a6      	LDI  R26,LOW(70)
000120 940e 031d 	CALL _lcd_putchar
                 ; 0000 0077                                             PORTC.1 = 0;
000122 98a9      	CBI  0x15,1
                 ; 0000 0078                                         break;
                 ; 0000 0079 
                 ; 0000 007A                                     }
                 _0x30:
                 ; 0000 007B                                 break;
000123 c016      	RJMP _0x2C
                 ; 0000 007C 
                 ; 0000 007D                                 case 0:
                 _0x2D:
000124 9730      	SBIW R30,0
000125 f4a1      	BRNE _0x2C
                 ; 0000 007E                                     lcd_putchar('B');
000126 e4a2      	LDI  R26,LOW(66)
000127 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 007F                                     cm = getchar();
                 ; 0000 0080                                     switch(cm)
                 ; 0000 0081                                     {
                 ; 0000 0082                                         case 'L':
000129 34ec      	CPI  R30,LOW(0x4C)
00012a e0a0      	LDI  R26,HIGH(0x4C)
00012b 07fa      	CPC  R31,R26
00012c f469      	BRNE _0x3A
                 ; 0000 0083                                             lcd_putchar('L');
00012d e4ac      	LDI  R26,LOW(76)
00012e 940e 031d 	CALL _lcd_putchar
                 ; 0000 0084                                             while(cm == 'L')
                 _0x3C:
000130 e4ec      	LDI  R30,LOW(76)
000131 15e5      	CP   R30,R5
000132 f439      	BRNE _0x3E
                 ; 0000 0085                                             {
                 ; 0000 0086                                                 PORTC.1 = 1;
000133 9aa9      	SBI  0x15,1
                 ; 0000 0087                                                 delay_ms(150);
000134 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0088                                                 PORTC.1 = 0;
000136 98a9      	CBI  0x15,1
                 ; 0000 0089                                                 delay_ms(150);
000137 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 008A                                             }
000139 cff6      	RJMP _0x3C
                 _0x3E:
                 ; 0000 008B                                     }
                 _0x3A:
                 ; 0000 008C                                 break;
                 ; 0000 008D 
                 ; 0000 008E 
                 ; 0000 008F                             }
                 _0x2C:
                 ; 0000 0090 
                 ; 0000 0091                     break;
00013a c139      	RJMP _0xE
                 ; 0000 0092 
                 ; 0000 0093                     case 2:
                 _0x29:
00013b 30e2      	CPI  R30,LOW(0x2)
00013c e0a0      	LDI  R26,HIGH(0x2)
00013d 07fa      	CPC  R31,R26
00013e f591      	BRNE _0x43
                 ; 0000 0094                         lcd_putchar('2');
00013f e3a2      	LDI  R26,LOW(50)
000140 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0095                         cm = getchar();
                 ; 0000 0096                             switch(cm)
                 ; 0000 0097                             {
                 ; 0000 0098                                 case 'O':
000142 34ef      	CPI  R30,LOW(0x4F)
000143 e0a0      	LDI  R26,HIGH(0x4F)
000144 07fa      	CPC  R31,R26
000145 f4a9      	BRNE _0x47
                 ; 0000 0099                                     lcd_putchar('O');
000146 e4af      	LDI  R26,LOW(79)
000147 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 009A                                     cm = getchar();
                 ; 0000 009B                                     switch(cm)
                 ; 0000 009C                                     {
                 ; 0000 009D                                         case 'N':
000149 34ee      	CPI  R30,LOW(0x4E)
00014a e0a0      	LDI  R26,HIGH(0x4E)
00014b 07fa      	CPC  R31,R26
00014c f429      	BRNE _0x4B
                 ; 0000 009E                                             lcd_putchar('N');
00014d e4ae      	LDI  R26,LOW(78)
00014e 940e 031d 	CALL _lcd_putchar
                 ; 0000 009F                                             PORTC.2 = 1;
000150 9aaa      	SBI  0x15,2
                 ; 0000 00A0                                         break;
000151 c008      	RJMP _0x4A
                 ; 0000 00A1 
                 ; 0000 00A2                                         case 'F':
                 _0x4B:
000152 34e6      	CPI  R30,LOW(0x46)
000153 e0a0      	LDI  R26,HIGH(0x46)
000154 07fa      	CPC  R31,R26
000155 f421      	BRNE _0x4A
                 ; 0000 00A3                                             lcd_putchar('F');
000156 e4a6      	LDI  R26,LOW(70)
000157 940e 031d 	CALL _lcd_putchar
                 ; 0000 00A4                                             PORTC.2 = 0;
000159 98aa      	CBI  0x15,2
                 ; 0000 00A5                                         break;
                 ; 0000 00A6                                     }
                 _0x4A:
                 ; 0000 00A7                                 break;
00015a c015      	RJMP _0x46
                 ; 0000 00A8 
                 ; 0000 00A9                                 case 0:
                 _0x47:
00015b 9730      	SBIW R30,0
00015c f499      	BRNE _0x46
                 ; 0000 00AA                                     lcd_putchar('B');
00015d e4a2      	LDI  R26,LOW(66)
00015e 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00AB                                     cm = getchar();
                 ; 0000 00AC                                     switch(cm)
                 ; 0000 00AD                                     {
                 ; 0000 00AE                                         case 'L':
000160 34ec      	CPI  R30,LOW(0x4C)
000161 e0a0      	LDI  R26,HIGH(0x4C)
000162 07fa      	CPC  R31,R26
000163 f461      	BRNE _0x54
                 ; 0000 00AF                                             lcd_putchar('L');
000164 e4ac      	LDI  R26,LOW(76)
000165 d1b7      	RCALL _lcd_putchar
                 ; 0000 00B0                                             while(cm == 'L')
                 _0x56:
000166 e4ec      	LDI  R30,LOW(76)
000167 15e5      	CP   R30,R5
000168 f439      	BRNE _0x58
                 ; 0000 00B1                                             {
                 ; 0000 00B2                                                 PORTC.2 = 1;
000169 9aaa      	SBI  0x15,2
                 ; 0000 00B3                                                 delay_ms(150);
00016a 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 00B4                                                 PORTC.2 = 0;
00016c 98aa      	CBI  0x15,2
                 ; 0000 00B5                                                 delay_ms(150);
00016d 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 00B6                                             }
00016f cff6      	RJMP _0x56
                 _0x58:
                 ; 0000 00B7                                         break;
                 ; 0000 00B8                                     }
                 _0x54:
                 ; 0000 00B9                             break;
                 ; 0000 00BA                             }
                 _0x46:
                 ; 0000 00BB                     case 3:
000170 c004      	RJMP _0x5D
                 _0x43:
000171 30e3      	CPI  R30,LOW(0x3)
000172 e0a0      	LDI  R26,HIGH(0x3)
000173 07fa      	CPC  R31,R26
000174 f581      	BRNE _0x5E
                 _0x5D:
                 ; 0000 00BC                         lcd_putchar('3');
000175 e3a3      	LDI  R26,LOW(51)
000176 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00BD                         cm = getchar();
                 ; 0000 00BE                             switch(cm)
                 ; 0000 00BF                             {
                 ; 0000 00C0                                 case 'O':
000178 34ef      	CPI  R30,LOW(0x4F)
000179 e0a0      	LDI  R26,HIGH(0x4F)
00017a 07fa      	CPC  R31,R26
00017b f499      	BRNE _0x62
                 ; 0000 00C1                                     lcd_putchar('O');
00017c e4af      	LDI  R26,LOW(79)
00017d 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00C2                                     cm = getchar();
                 ; 0000 00C3                                     switch(cm)
                 ; 0000 00C4                                     {
                 ; 0000 00C5                                         case 'N':
00017f 34ee      	CPI  R30,LOW(0x4E)
000180 e0a0      	LDI  R26,HIGH(0x4E)
000181 07fa      	CPC  R31,R26
000182 f421      	BRNE _0x66
                 ; 0000 00C6                                             lcd_putchar('N');
000183 e4ae      	LDI  R26,LOW(78)
000184 d198      	RCALL _lcd_putchar
                 ; 0000 00C7                                             PORTC.3= 1;
000185 9aab      	SBI  0x15,3
                 ; 0000 00C8                                         break;
000186 c007      	RJMP _0x65
                 ; 0000 00C9 
                 ; 0000 00CA                                         case 'F':
                 _0x66:
000187 34e6      	CPI  R30,LOW(0x46)
000188 e0a0      	LDI  R26,HIGH(0x46)
000189 07fa      	CPC  R31,R26
00018a f419      	BRNE _0x65
                 ; 0000 00CB                                             lcd_putchar('F');
00018b e4a6      	LDI  R26,LOW(70)
00018c d190      	RCALL _lcd_putchar
                 ; 0000 00CC                                             PORTC.3= 0;
00018d 98ab      	CBI  0x15,3
                 ; 0000 00CD                                         break;
                 ; 0000 00CE                                     }
                 _0x65:
                 ; 0000 00CF                                 break;
00018e c015      	RJMP _0x61
                 ; 0000 00D0 
                 ; 0000 00D1                                 case 0:
                 _0x62:
00018f 9730      	SBIW R30,0
000190 f499      	BRNE _0x61
                 ; 0000 00D2                                     lcd_putchar('B');
000191 e4a2      	LDI  R26,LOW(66)
000192 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00D3                                     cm = getchar();
                 ; 0000 00D4                                     switch(cm)
                 ; 0000 00D5                                     {
                 ; 0000 00D6                                         case 'L':
000194 34ec      	CPI  R30,LOW(0x4C)
000195 e0a0      	LDI  R26,HIGH(0x4C)
000196 07fa      	CPC  R31,R26
000197 f461      	BRNE _0x6F
                 ; 0000 00D7                                             lcd_putchar('L');
000198 e4ac      	LDI  R26,LOW(76)
000199 d183      	RCALL _lcd_putchar
                 ; 0000 00D8                                             while(cm == 'L')
                 _0x71:
00019a e4ec      	LDI  R30,LOW(76)
00019b 15e5      	CP   R30,R5
00019c f439      	BRNE _0x73
                 ; 0000 00D9                                             {
                 ; 0000 00DA                                                 PORTC.3 = 1;
00019d 9aab      	SBI  0x15,3
                 ; 0000 00DB                                                 delay_ms(150);
00019e 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 00DC                                                 PORTC.3 = 0;
0001a0 98ab      	CBI  0x15,3
                 ; 0000 00DD                                                 delay_ms(150);
0001a1 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 00DE                                             }
0001a3 cff6      	RJMP _0x71
                 _0x73:
                 ; 0000 00DF                                         break;
                 ; 0000 00E0                                     }
                 _0x6F:
                 ; 0000 00E1                             }
                 _0x61:
                 ; 0000 00E2                     break;
0001a4 c0cf      	RJMP _0xE
                 ; 0000 00E3 
                 ; 0000 00E4                     case 4:
                 _0x5E:
0001a5 30e4      	CPI  R30,LOW(0x4)
0001a6 e0a0      	LDI  R26,HIGH(0x4)
0001a7 07fa      	CPC  R31,R26
0001a8 f581      	BRNE _0x78
                 ; 0000 00E5                         lcd_putchar('4');
0001a9 e3a4      	LDI  R26,LOW(52)
0001aa 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00E6                         cm = getchar();
                 ; 0000 00E7                             switch(cm)
                 ; 0000 00E8                             {
                 ; 0000 00E9                                 case 'O':
0001ac 34ef      	CPI  R30,LOW(0x4F)
0001ad e0a0      	LDI  R26,HIGH(0x4F)
0001ae 07fa      	CPC  R31,R26
0001af f499      	BRNE _0x7C
                 ; 0000 00EA                                     lcd_putchar('O');
0001b0 e4af      	LDI  R26,LOW(79)
0001b1 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00EB                                     cm = getchar();
                 ; 0000 00EC                                     switch(cm)
                 ; 0000 00ED                                     {
                 ; 0000 00EE                                         case 'N':
0001b3 34ee      	CPI  R30,LOW(0x4E)
0001b4 e0a0      	LDI  R26,HIGH(0x4E)
0001b5 07fa      	CPC  R31,R26
0001b6 f421      	BRNE _0x80
                 ; 0000 00EF                                             lcd_putchar('N');
0001b7 e4ae      	LDI  R26,LOW(78)
0001b8 d164      	RCALL _lcd_putchar
                 ; 0000 00F0                                             PORTC.4 = 1;
0001b9 9aac      	SBI  0x15,4
                 ; 0000 00F1                                         break;
0001ba c007      	RJMP _0x7F
                 ; 0000 00F2 
                 ; 0000 00F3                                         case 'F':
                 _0x80:
0001bb 34e6      	CPI  R30,LOW(0x46)
0001bc e0a0      	LDI  R26,HIGH(0x46)
0001bd 07fa      	CPC  R31,R26
0001be f419      	BRNE _0x7F
                 ; 0000 00F4                                             lcd_putchar('F');
0001bf e4a6      	LDI  R26,LOW(70)
0001c0 d15c      	RCALL _lcd_putchar
                 ; 0000 00F5                                             PORTC.4 = 0;
0001c1 98ac      	CBI  0x15,4
                 ; 0000 00F6                                         break;
                 ; 0000 00F7                                     }
                 _0x7F:
                 ; 0000 00F8                                 break;
0001c2 c015      	RJMP _0x7B
                 ; 0000 00F9 
                 ; 0000 00FA                                 case 0:
                 _0x7C:
0001c3 9730      	SBIW R30,0
0001c4 f499      	BRNE _0x7B
                 ; 0000 00FB                                     lcd_putchar('B');
0001c5 e4a2      	LDI  R26,LOW(66)
0001c6 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 00FC                                     cm = getchar();
                 ; 0000 00FD                                     switch(cm)
                 ; 0000 00FE                                     {
                 ; 0000 00FF                                         case 'L':
0001c8 34ec      	CPI  R30,LOW(0x4C)
0001c9 e0a0      	LDI  R26,HIGH(0x4C)
0001ca 07fa      	CPC  R31,R26
0001cb f461      	BRNE _0x89
                 ; 0000 0100                                             lcd_putchar('L');
0001cc e4ac      	LDI  R26,LOW(76)
0001cd d14f      	RCALL _lcd_putchar
                 ; 0000 0101                                             while(cm == 'L')
                 _0x8B:
0001ce e4ec      	LDI  R30,LOW(76)
0001cf 15e5      	CP   R30,R5
0001d0 f439      	BRNE _0x8D
                 ; 0000 0102                                             {
                 ; 0000 0103                                                 PORTC.4 = 1;
0001d1 9aac      	SBI  0x15,4
                 ; 0000 0104                                                 delay_ms(150);
0001d2 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0105                                                 PORTC.4 = 0;
0001d4 98ac      	CBI  0x15,4
                 ; 0000 0106                                                 delay_ms(150);
0001d5 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0107                                             }
0001d7 cff6      	RJMP _0x8B
                 _0x8D:
                 ; 0000 0108                                         break;
                 ; 0000 0109                                     }
                 _0x89:
                 ; 0000 010A                             }
                 _0x7B:
                 ; 0000 010B                     break;
0001d8 c09b      	RJMP _0xE
                 ; 0000 010C 
                 ; 0000 010D                     case 5:
                 _0x78:
0001d9 30e5      	CPI  R30,LOW(0x5)
0001da e0a0      	LDI  R26,HIGH(0x5)
0001db 07fa      	CPC  R31,R26
0001dc f581      	BRNE _0x92
                 ; 0000 010E                         lcd_putchar('5');
0001dd e3a5      	LDI  R26,LOW(53)
0001de 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 010F                         cm = getchar();
                 ; 0000 0110                             switch(cm)
                 ; 0000 0111                             {
                 ; 0000 0112                                 case 'O':
0001e0 34ef      	CPI  R30,LOW(0x4F)
0001e1 e0a0      	LDI  R26,HIGH(0x4F)
0001e2 07fa      	CPC  R31,R26
0001e3 f499      	BRNE _0x96
                 ; 0000 0113                                     lcd_putchar('O');
0001e4 e4af      	LDI  R26,LOW(79)
0001e5 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0114                                     cm = getchar();
                 ; 0000 0115                                     switch(cm)
                 ; 0000 0116                                     {
                 ; 0000 0117                                         case 'N':
0001e7 34ee      	CPI  R30,LOW(0x4E)
0001e8 e0a0      	LDI  R26,HIGH(0x4E)
0001e9 07fa      	CPC  R31,R26
0001ea f421      	BRNE _0x9A
                 ; 0000 0118                                             lcd_putchar('N');
0001eb e4ae      	LDI  R26,LOW(78)
0001ec d130      	RCALL _lcd_putchar
                 ; 0000 0119                                             PORTC.5 = 1;
0001ed 9aad      	SBI  0x15,5
                 ; 0000 011A                                         break;
0001ee c007      	RJMP _0x99
                 ; 0000 011B 
                 ; 0000 011C                                         case 'F':
                 _0x9A:
0001ef 34e6      	CPI  R30,LOW(0x46)
0001f0 e0a0      	LDI  R26,HIGH(0x46)
0001f1 07fa      	CPC  R31,R26
0001f2 f419      	BRNE _0x99
                 ; 0000 011D                                             lcd_putchar('F');
0001f3 e4a6      	LDI  R26,LOW(70)
0001f4 d128      	RCALL _lcd_putchar
                 ; 0000 011E                                             PORTC.5 = 0;
0001f5 98ad      	CBI  0x15,5
                 ; 0000 011F                                         break;
                 ; 0000 0120                                     }
                 _0x99:
                 ; 0000 0121                                 break;
0001f6 c015      	RJMP _0x95
                 ; 0000 0122 
                 ; 0000 0123                                 case 0:
                 _0x96:
0001f7 9730      	SBIW R30,0
0001f8 f499      	BRNE _0x95
                 ; 0000 0124                                     lcd_putchar('B');
0001f9 e4a2      	LDI  R26,LOW(66)
0001fa 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0125                                     cm = getchar();
                 ; 0000 0126                                     switch(cm)
                 ; 0000 0127                                     {
                 ; 0000 0128                                         case 'L':
0001fc 34ec      	CPI  R30,LOW(0x4C)
0001fd e0a0      	LDI  R26,HIGH(0x4C)
0001fe 07fa      	CPC  R31,R26
0001ff f461      	BRNE _0xA3
                 ; 0000 0129                                             lcd_putchar('L');
000200 e4ac      	LDI  R26,LOW(76)
000201 d11b      	RCALL _lcd_putchar
                 ; 0000 012A                                             while(cm == 'L')
                 _0xA5:
000202 e4ec      	LDI  R30,LOW(76)
000203 15e5      	CP   R30,R5
000204 f439      	BRNE _0xA7
                 ; 0000 012B                                             {
                 ; 0000 012C                                                 PORTC.5 = 1;
000205 9aad      	SBI  0x15,5
                 ; 0000 012D                                                 delay_ms(150);
000206 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 012E                                                 PORTC.5 = 0;
000208 98ad      	CBI  0x15,5
                 ; 0000 012F                                                 delay_ms(150);
000209 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0130                                             }
00020b cff6      	RJMP _0xA5
                 _0xA7:
                 ; 0000 0131                                         break;
                 ; 0000 0132                                     }
                 _0xA3:
                 ; 0000 0133                             }
                 _0x95:
                 ; 0000 0134                     break;
00020c c067      	RJMP _0xE
                 ; 0000 0135 
                 ; 0000 0136                     case 6:
                 _0x92:
00020d 30e6      	CPI  R30,LOW(0x6)
00020e e0a0      	LDI  R26,HIGH(0x6)
00020f 07fa      	CPC  R31,R26
000210 f581      	BRNE _0xAC
                 ; 0000 0137                         lcd_putchar('6');
000211 e3a6      	LDI  R26,LOW(54)
000212 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0138                         cm = getchar();
                 ; 0000 0139                             switch(cm)
                 ; 0000 013A                             {
                 ; 0000 013B                                 case 'O':
000214 34ef      	CPI  R30,LOW(0x4F)
000215 e0a0      	LDI  R26,HIGH(0x4F)
000216 07fa      	CPC  R31,R26
000217 f499      	BRNE _0xB0
                 ; 0000 013C                                     lcd_putchar('O');
000218 e4af      	LDI  R26,LOW(79)
000219 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 013D                                     cm = getchar();
                 ; 0000 013E                                     switch(cm)
                 ; 0000 013F                                     {
                 ; 0000 0140                                         case 'N':
00021b 34ee      	CPI  R30,LOW(0x4E)
00021c e0a0      	LDI  R26,HIGH(0x4E)
00021d 07fa      	CPC  R31,R26
00021e f421      	BRNE _0xB4
                 ; 0000 0141                                             lcd_putchar('N');
00021f e4ae      	LDI  R26,LOW(78)
000220 d0fc      	RCALL _lcd_putchar
                 ; 0000 0142                                             PORTC.6 = 1;
000221 9aae      	SBI  0x15,6
                 ; 0000 0143                                         break;
000222 c007      	RJMP _0xB3
                 ; 0000 0144 
                 ; 0000 0145                                         case 'F':
                 _0xB4:
000223 34e6      	CPI  R30,LOW(0x46)
000224 e0a0      	LDI  R26,HIGH(0x46)
000225 07fa      	CPC  R31,R26
000226 f419      	BRNE _0xB3
                 ; 0000 0146                                             lcd_putchar('F');
000227 e4a6      	LDI  R26,LOW(70)
000228 d0f4      	RCALL _lcd_putchar
                 ; 0000 0147                                             PORTC.6 = 0;
000229 98ae      	CBI  0x15,6
                 ; 0000 0148                                         break;
                 ; 0000 0149                                     }
                 _0xB3:
                 ; 0000 014A                                 break;
00022a c015      	RJMP _0xAF
                 ; 0000 014B 
                 ; 0000 014C                                 case 0:
                 _0xB0:
00022b 9730      	SBIW R30,0
00022c f499      	BRNE _0xAF
                 ; 0000 014D                                     lcd_putchar('B');
00022d e4a2      	LDI  R26,LOW(66)
00022e 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 014E                                     cm = getchar();
                 ; 0000 014F                                     switch(cm)
                 ; 0000 0150                                     {
                 ; 0000 0151                                         case 'L':
000230 34ec      	CPI  R30,LOW(0x4C)
000231 e0a0      	LDI  R26,HIGH(0x4C)
000232 07fa      	CPC  R31,R26
000233 f461      	BRNE _0xBD
                 ; 0000 0152                                             lcd_putchar('L');
000234 e4ac      	LDI  R26,LOW(76)
000235 d0e7      	RCALL _lcd_putchar
                 ; 0000 0153                                             while(cm == 'L')
                 _0xBF:
000236 e4ec      	LDI  R30,LOW(76)
000237 15e5      	CP   R30,R5
000238 f439      	BRNE _0xC1
                 ; 0000 0154                                             {
                 ; 0000 0155                                                 PORTC.6 = 6;
000239 9aae      	SBI  0x15,6
                 ; 0000 0156                                                 delay_ms(150);
00023a 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0157                                                 PORTC.6 = 6;
00023c 9aae      	SBI  0x15,6
                 ; 0000 0158                                                 delay_ms(150);
00023d 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0159                                             }
00023f cff6      	RJMP _0xBF
                 _0xC1:
                 ; 0000 015A                                         break;
                 ; 0000 015B                                     }
                 _0xBD:
                 ; 0000 015C                             }
                 _0xAF:
                 ; 0000 015D                     break;
000240 c033      	RJMP _0xE
                 ; 0000 015E 
                 ; 0000 015F                     case 7:
                 _0xAC:
000241 30e7      	CPI  R30,LOW(0x7)
000242 e0a0      	LDI  R26,HIGH(0x7)
000243 07fa      	CPC  R31,R26
000244 f579      	BRNE _0xE
                 ; 0000 0160                         lcd_putchar('7');
000245 e3a7      	LDI  R26,LOW(55)
000246 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0161                         cm = getchar();
                 ; 0000 0162                             switch(cm)
                 ; 0000 0163                             {
                 ; 0000 0164                                 case 'O':
000248 34ef      	CPI  R30,LOW(0x4F)
000249 e0a0      	LDI  R26,HIGH(0x4F)
00024a 07fa      	CPC  R31,R26
00024b f499      	BRNE _0xCA
                 ; 0000 0165                                     lcd_putchar('O');
00024c e4af      	LDI  R26,LOW(79)
00024d 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0166                                     cm = getchar();
                 ; 0000 0167                                     switch(cm)
                 ; 0000 0168                                     {
                 ; 0000 0169                                         case 'N':
00024f 34ee      	CPI  R30,LOW(0x4E)
000250 e0a0      	LDI  R26,HIGH(0x4E)
000251 07fa      	CPC  R31,R26
000252 f421      	BRNE _0xCE
                 ; 0000 016A                                             lcd_putchar('N');
000253 e4ae      	LDI  R26,LOW(78)
000254 d0c8      	RCALL _lcd_putchar
                 ; 0000 016B                                             PORTC.7 = 1;
000255 9aaf      	SBI  0x15,7
                 ; 0000 016C                                         break;
000256 c007      	RJMP _0xCD
                 ; 0000 016D 
                 ; 0000 016E                                         case 'F':
                 _0xCE:
000257 34e6      	CPI  R30,LOW(0x46)
000258 e0a0      	LDI  R26,HIGH(0x46)
000259 07fa      	CPC  R31,R26
00025a f419      	BRNE _0xCD
                 ; 0000 016F                                             lcd_putchar('F');
00025b e4a6      	LDI  R26,LOW(70)
00025c d0c0      	RCALL _lcd_putchar
                 ; 0000 0170                                             PORTC.7 = 0;
00025d 98af      	CBI  0x15,7
                 ; 0000 0171                                         break;
                 ; 0000 0172                                     }
                 _0xCD:
                 ; 0000 0173                                 break;
00025e c015      	RJMP _0xC9
                 ; 0000 0174 
                 ; 0000 0175                                 case 0:
                 _0xCA:
00025f 9730      	SBIW R30,0
000260 f499      	BRNE _0xC9
                 ; 0000 0176                                     lcd_putchar('B');
000261 e4a2      	LDI  R26,LOW(66)
000262 940e 037a 	CALL SUBOPT_0x1
                 ; 0000 0177                                     cm = getchar();
                 ; 0000 0178                                     switch(cm)
                 ; 0000 0179                                     {
                 ; 0000 017A                                         case 'L':
000264 34ec      	CPI  R30,LOW(0x4C)
000265 e0a0      	LDI  R26,HIGH(0x4C)
000266 07fa      	CPC  R31,R26
000267 f461      	BRNE _0xD7
                 ; 0000 017B                                             lcd_putchar('L');
000268 e4ac      	LDI  R26,LOW(76)
000269 d0b3      	RCALL _lcd_putchar
                 ; 0000 017C                                             while(cm == 'L')
                 _0xD9:
00026a e4ec      	LDI  R30,LOW(76)
00026b 15e5      	CP   R30,R5
00026c f439      	BRNE _0xDB
                 ; 0000 017D                                             {
                 ; 0000 017E                                                 PORTC.7 = 1;
00026d 9aaf      	SBI  0x15,7
                 ; 0000 017F                                                 delay_ms(150);
00026e 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0180                                                 PORTC.7 = 0;
000270 98af      	CBI  0x15,7
                 ; 0000 0181                                                 delay_ms(150);
000271 940e 037d 	CALL SUBOPT_0x2
                 ; 0000 0182                                             }
000273 cff6      	RJMP _0xD9
                 _0xDB:
                 ; 0000 0183                                     }
                 _0xD7:
                 ; 0000 0184                             }
                 _0xC9:
                 ; 0000 0185                     break;
                 ; 0000 0186                 }
                 _0xE:
                 ; 0000 0187             break;
000274 c06d      	RJMP _0x8
                 ; 0000 0188 
                 ; 0000 0189             case 7:
                 _0xB:
000275 30e7      	CPI  R30,LOW(0x7)
000276 e0a0      	LDI  R26,HIGH(0x7)
000277 07fa      	CPC  R31,R26
000278 f421      	BRNE _0xE0
                 ; 0000 018A                 lcd_clear();
000279 d097      	RCALL _lcd_clear
                 ; 0000 018B                 lcd_puts("Invalid Command");
                +
00027a e6a0     +LDI R26 , LOW ( _0xE1 + ( 0 ) )
00027b e0b2     +LDI R27 , HIGH ( _0xE1 + ( 0 ) )
                 	__POINTW2MN _0xE1,0
00027c c05f      	RJMP _0xEF
                 ; 0000 018C                 delay_ms(2000);
                 ; 0000 018D                 lcd_clear();
                 ; 0000 018E 
                 ; 0000 018F             break;
                 ; 0000 0190 
                 ; 0000 0191             case 8:
                 _0xE0:
00027d 30e8      	CPI  R30,LOW(0x8)
00027e e0a0      	LDI  R26,HIGH(0x8)
00027f 07fa      	CPC  R31,R26
000280 f421      	BRNE _0xE2
                 ; 0000 0192                 lcd_clear();
000281 d08f      	RCALL _lcd_clear
                 ; 0000 0193                 lcd_puts("Invalid Command");
                +
000282 e7a0     +LDI R26 , LOW ( _0xE1 + ( 16 ) )
000283 e0b2     +LDI R27 , HIGH ( _0xE1 + ( 16 ) )
                 	__POINTW2MN _0xE1,16
000284 c057      	RJMP _0xEF
                 ; 0000 0194                 delay_ms(2000);
                 ; 0000 0195                 lcd_clear();
                 ; 0000 0196 
                 ; 0000 0197             break;
                 ; 0000 0198 
                 ; 0000 0199             case 9:
                 _0xE2:
000285 30e9      	CPI  R30,LOW(0x9)
000286 e0a0      	LDI  R26,HIGH(0x9)
000287 07fa      	CPC  R31,R26
000288 f421      	BRNE _0xE3
                 ; 0000 019A                 lcd_clear();
000289 d087      	RCALL _lcd_clear
                 ; 0000 019B                 lcd_puts("Invalid Command");
                +
00028a e8a0     +LDI R26 , LOW ( _0xE1 + ( 32 ) )
00028b e0b2     +LDI R27 , HIGH ( _0xE1 + ( 32 ) )
                 	__POINTW2MN _0xE1,32
00028c c04f      	RJMP _0xEF
                 ; 0000 019C                 delay_ms(2000);
                 ; 0000 019D                 lcd_clear();
                 ; 0000 019E 
                 ; 0000 019F             break;
                 ; 0000 01A0 
                 ; 0000 01A1             case 4:
                 _0xE3:
00028d 30e4      	CPI  R30,LOW(0x4)
00028e e0a0      	LDI  R26,HIGH(0x4)
00028f 07fa      	CPC  R31,R26
000290 f421      	BRNE _0xE4
                 ; 0000 01A2                 lcd_clear();
000291 d07f      	RCALL _lcd_clear
                 ; 0000 01A3                 lcd_puts("Invalid Command");
                +
000292 e9a0     +LDI R26 , LOW ( _0xE1 + ( 48 ) )
000293 e0b2     +LDI R27 , HIGH ( _0xE1 + ( 48 ) )
                 	__POINTW2MN _0xE1,48
000294 c047      	RJMP _0xEF
                 ; 0000 01A4                 delay_ms(2000);
                 ; 0000 01A5                 lcd_clear();
                 ; 0000 01A6 
                 ; 0000 01A7             break;
                 ; 0000 01A8 
                 ; 0000 01A9             case 5:
                 _0xE4:
000295 30e5      	CPI  R30,LOW(0x5)
000296 e0a0      	LDI  R26,HIGH(0x5)
000297 07fa      	CPC  R31,R26
000298 f421      	BRNE _0xE5
                 ; 0000 01AA                 lcd_clear();
000299 d077      	RCALL _lcd_clear
                 ; 0000 01AB                 lcd_puts("Invalid Command");
                +
00029a eaa0     +LDI R26 , LOW ( _0xE1 + ( 64 ) )
00029b e0b2     +LDI R27 , HIGH ( _0xE1 + ( 64 ) )
                 	__POINTW2MN _0xE1,64
00029c c03f      	RJMP _0xEF
                 ; 0000 01AC                 delay_ms(2000);
                 ; 0000 01AD                 lcd_clear();
                 ; 0000 01AE 
                 ; 0000 01AF             break;
                 ; 0000 01B0 
                 ; 0000 01B1             case 6:
                 _0xE5:
00029d 30e6      	CPI  R30,LOW(0x6)
00029e e0a0      	LDI  R26,HIGH(0x6)
00029f 07fa      	CPC  R31,R26
0002a0 f421      	BRNE _0xE6
                 ; 0000 01B2                 lcd_clear();
0002a1 d06f      	RCALL _lcd_clear
                 ; 0000 01B3                 lcd_puts("Invalid Command");
                +
0002a2 eba0     +LDI R26 , LOW ( _0xE1 + ( 80 ) )
0002a3 e0b2     +LDI R27 , HIGH ( _0xE1 + ( 80 ) )
                 	__POINTW2MN _0xE1,80
0002a4 c037      	RJMP _0xEF
                 ; 0000 01B4                 delay_ms(2000);
                 ; 0000 01B5                 lcd_clear();
                 ; 0000 01B6 
                 ; 0000 01B7             break;
                 ; 0000 01B8 
                 ; 0000 01B9             case 1:
                 _0xE6:
0002a5 30e1      	CPI  R30,LOW(0x1)
0002a6 e0a0      	LDI  R26,HIGH(0x1)
0002a7 07fa      	CPC  R31,R26
0002a8 f421      	BRNE _0xE7
                 ; 0000 01BA                 lcd_clear();
0002a9 d067      	RCALL _lcd_clear
                 ; 0000 01BB                 lcd_puts("Invalid Command");
                +
0002aa eca0     +LDI R26 , LOW ( _0xE1 + ( 96 ) )
0002ab e0b2     +LDI R27 , HIGH ( _0xE1 + ( 96 ) )
                 	__POINTW2MN _0xE1,96
0002ac c02f      	RJMP _0xEF
                 ; 0000 01BC                 delay_ms(2000);
                 ; 0000 01BD                 lcd_clear();
                 ; 0000 01BE 
                 ; 0000 01BF             break;
                 ; 0000 01C0 
                 ; 0000 01C1             case 2:
                 _0xE7:
0002ad 30e2      	CPI  R30,LOW(0x2)
0002ae e0a0      	LDI  R26,HIGH(0x2)
0002af 07fa      	CPC  R31,R26
0002b0 f421      	BRNE _0xE8
                 ; 0000 01C2                 lcd_clear();
0002b1 d05f      	RCALL _lcd_clear
                 ; 0000 01C3                 lcd_puts("Invalid Command");
                +
0002b2 eda0     +LDI R26 , LOW ( _0xE1 + ( 112 ) )
0002b3 e0b2     +LDI R27 , HIGH ( _0xE1 + ( 112 ) )
                 	__POINTW2MN _0xE1,112
0002b4 c027      	RJMP _0xEF
                 ; 0000 01C4                 delay_ms(2000);
                 ; 0000 01C5                 lcd_clear();
                 ; 0000 01C6 
                 ; 0000 01C7             break;
                 ; 0000 01C8 
                 ; 0000 01C9             case 3:
                 _0xE8:
0002b5 30e3      	CPI  R30,LOW(0x3)
0002b6 e0a0      	LDI  R26,HIGH(0x3)
0002b7 07fa      	CPC  R31,R26
0002b8 f421      	BRNE _0xE9
                 ; 0000 01CA                 lcd_clear();
0002b9 d057      	RCALL _lcd_clear
                 ; 0000 01CB                 lcd_puts("Invalid Command");
                +
0002ba eea0     +LDI R26 , LOW ( _0xE1 + ( 128 ) )
0002bb e0b2     +LDI R27 , HIGH ( _0xE1 + ( 128 ) )
                 	__POINTW2MN _0xE1,128
0002bc c01f      	RJMP _0xEF
                 ; 0000 01CC                 delay_ms(2000);
                 ; 0000 01CD                 lcd_clear();
                 ; 0000 01CE 
                 ; 0000 01CF             break;
                 ; 0000 01D0 
                 ; 0000 01D1             case 'O':
                 _0xE9:
0002bd 34ef      	CPI  R30,LOW(0x4F)
0002be e0a0      	LDI  R26,HIGH(0x4F)
0002bf 07fa      	CPC  R31,R26
0002c0 f421      	BRNE _0xEA
                 ; 0000 01D2                 lcd_clear();
0002c1 d04f      	RCALL _lcd_clear
                 ; 0000 01D3                 lcd_puts("Invalid Command");
                +
0002c2 efa0     +LDI R26 , LOW ( _0xE1 + ( 144 ) )
0002c3 e0b2     +LDI R27 , HIGH ( _0xE1 + ( 144 ) )
                 	__POINTW2MN _0xE1,144
0002c4 c017      	RJMP _0xEF
                 ; 0000 01D4                 delay_ms(2000);
                 ; 0000 01D5                 lcd_clear();
                 ; 0000 01D6 
                 ; 0000 01D7             break;
                 ; 0000 01D8 
                 ; 0000 01D9             case 'N':
                 _0xEA:
0002c5 34ee      	CPI  R30,LOW(0x4E)
0002c6 e0a0      	LDI  R26,HIGH(0x4E)
0002c7 07fa      	CPC  R31,R26
0002c8 f421      	BRNE _0xEB
                 ; 0000 01DA                 lcd_clear();
0002c9 d047      	RCALL _lcd_clear
                 ; 0000 01DB                 lcd_puts("Invalid Command");
                +
0002ca e0a0     +LDI R26 , LOW ( _0xE1 + ( 160 ) )
0002cb e0b3     +LDI R27 , HIGH ( _0xE1 + ( 160 ) )
                 	__POINTW2MN _0xE1,160
0002cc c00f      	RJMP _0xEF
                 ; 0000 01DC                 delay_ms(2000);
                 ; 0000 01DD                 lcd_clear();
                 ; 0000 01DE 
                 ; 0000 01DF             break;
                 ; 0000 01E0 
                 ; 0000 01E1             case 'B':
                 _0xEB:
0002cd 34e2      	CPI  R30,LOW(0x42)
0002ce e0a0      	LDI  R26,HIGH(0x42)
0002cf 07fa      	CPC  R31,R26
0002d0 f421      	BRNE _0xEC
                 ; 0000 01E2                 lcd_clear();
0002d1 d03f      	RCALL _lcd_clear
                 ; 0000 01E3                 lcd_puts("Invalid Command");
                +
0002d2 e1a0     +LDI R26 , LOW ( _0xE1 + ( 176 ) )
0002d3 e0b3     +LDI R27 , HIGH ( _0xE1 + ( 176 ) )
                 	__POINTW2MN _0xE1,176
0002d4 c007      	RJMP _0xEF
                 ; 0000 01E4                 delay_ms(2000);
                 ; 0000 01E5                 lcd_clear();
                 ; 0000 01E6 
                 ; 0000 01E7             break;
                 ; 0000 01E8 
                 ; 0000 01E9             case 'F':
                 _0xEC:
0002d5 34e6      	CPI  R30,LOW(0x46)
0002d6 e0a0      	LDI  R26,HIGH(0x46)
0002d7 07fa      	CPC  R31,R26
0002d8 f449      	BRNE _0x8
                 ; 0000 01EA                 lcd_clear();
0002d9 d037      	RCALL _lcd_clear
                 ; 0000 01EB                 lcd_puts("Invalid Command");
                +
0002da e2a0     +LDI R26 , LOW ( _0xE1 + ( 192 ) )
0002db e0b3     +LDI R27 , HIGH ( _0xE1 + ( 192 ) )
                 	__POINTW2MN _0xE1,192
                 _0xEF:
0002dc d055      	RCALL _lcd_puts
                 ; 0000 01EC                 delay_ms(2000);
0002dd eda0      	LDI  R26,LOW(2000)
0002de e0b7      	LDI  R27,HIGH(2000)
0002df 940e 038f 	CALL _delay_ms
                 ; 0000 01ED                 lcd_clear();
0002e1 d02f      	RCALL _lcd_clear
                 ; 0000 01EE 
                 ; 0000 01EF             break;
                 ; 0000 01F0         }//End Main Switch()
                 _0x8:
                 ; 0000 01F1     }//End While(1)
0002e2 cdc8      	RJMP _0x3
                 ; 0000 01F2 }//End Main()
                 _0xEE:
0002e3 cfff      	RJMP _0xEE
                 ; .FEND
                 
                 	.DSEG
                 _0xE1:
000260           	.BYTE 0xD0
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_write_nibble_G100:
                 ; .FSTART __lcd_write_nibble_G100
0002e4 93aa      	ST   -Y,R26
0002e5 b3e8      	IN   R30,0x18
0002e6 70ef      	ANDI R30,LOW(0xF)
0002e7 2fae      	MOV  R26,R30
0002e8 81e8      	LD   R30,Y
0002e9 7fe0      	ANDI R30,LOW(0xF0)
0002ea 2bea      	OR   R30,R26
0002eb bbe8      	OUT  0x18,R30
                +
0002ec e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002ed 958a     +DEC R24
0002ee f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002ef 9ac3      	SBI  0x18,3
                +
0002f0 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002f1 958a     +DEC R24
0002f2 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002f3 98c3      	CBI  0x18,3
                +
0002f4 e08d     +LDI R24 , LOW ( 13 )
                +__DELAY_USB_LOOP :
0002f5 958a     +DEC R24
0002f6 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 13
0002f7 c077      	RJMP _0x2080001
                 ; .FEND
                 __lcd_write_data:
                 ; .FSTART __lcd_write_data
0002f8 93aa      	ST   -Y,R26
0002f9 81a8      	LD   R26,Y
0002fa dfe9      	RCALL __lcd_write_nibble_G100
0002fb 81e8          ld    r30,y
0002fc 95e2          swap  r30
0002fd 83e8          st    y,r30
0002fe 81a8      	LD   R26,Y
0002ff dfe4      	RCALL __lcd_write_nibble_G100
                +
000300 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
000301 958a     +DEC R24
000302 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
000303 c06b      	RJMP _0x2080001
                 ; .FEND
                 _lcd_gotoxy:
                 ; .FSTART _lcd_gotoxy
000304 93aa      	ST   -Y,R26
000305 81e8      	LD   R30,Y
000306 e0f0      	LDI  R31,0
000307 5de0      	SUBI R30,LOW(-__base_y_G100)
000308 4ffc      	SBCI R31,HIGH(-__base_y_G100)
000309 81e0      	LD   R30,Z
00030a 81a9      	LDD  R26,Y+1
00030b 0fae      	ADD  R26,R30
00030c dfeb      	RCALL __lcd_write_data
00030d 8049      	LDD  R4,Y+1
00030e 8078      	LDD  R7,Y+0
00030f 9622      	ADIW R28,2
000310 9508      	RET
                 ; .FEND
                 _lcd_clear:
                 ; .FSTART _lcd_clear
000311 e0a2      	LDI  R26,LOW(2)
000312 940e 0381 	CALL SUBOPT_0x3
000314 e0ac      	LDI  R26,LOW(12)
000315 dfe2      	RCALL __lcd_write_data
000316 e0a1      	LDI  R26,LOW(1)
000317 940e 0381 	CALL SUBOPT_0x3
000319 e0e0      	LDI  R30,LOW(0)
00031a 2e7e      	MOV  R7,R30
00031b 2e4e      	MOV  R4,R30
00031c 9508      	RET
                 ; .FEND
                 _lcd_putchar:
                 ; .FSTART _lcd_putchar
00031d 93aa      	ST   -Y,R26
00031e 81a8      	LD   R26,Y
00031f 30aa      	CPI  R26,LOW(0xA)
000320 f011      	BREQ _0x2000005
000321 1446      	CP   R4,R6
000322 f048      	BRLO _0x2000004
                 _0x2000005:
000323 e0e0      	LDI  R30,LOW(0)
000324 93ea      	ST   -Y,R30
000325 9473      	INC  R7
000326 2da7      	MOV  R26,R7
000327 dfdc      	RCALL _lcd_gotoxy
000328 81a8      	LD   R26,Y
000329 30aa      	CPI  R26,LOW(0xA)
00032a f409      	BRNE _0x2000007
00032b c043      	RJMP _0x2080001
                 _0x2000007:
                 _0x2000004:
00032c 9443      	INC  R4
00032d 9ac1      	SBI  0x18,1
00032e 81a8      	LD   R26,Y
00032f dfc8      	RCALL __lcd_write_data
000330 98c1      	CBI  0x18,1
000331 c03d      	RJMP _0x2080001
                 ; .FEND
                 _lcd_puts:
                 ; .FSTART _lcd_puts
000332 93ba      	ST   -Y,R27
000333 93aa      	ST   -Y,R26
000334 931a      	ST   -Y,R17
                 _0x2000008:
000335 81a9      	LDD  R26,Y+1
000336 81ba      	LDD  R27,Y+1+1
000337 91ed      	LD   R30,X+
000338 83a9      	STD  Y+1,R26
000339 83ba      	STD  Y+1+1,R27
00033a 2f1e      	MOV  R17,R30
00033b 30e0      	CPI  R30,0
00033c f019      	BREQ _0x200000A
00033d 2fa1      	MOV  R26,R17
00033e dfde      	RCALL _lcd_putchar
00033f cff5      	RJMP _0x2000008
                 _0x200000A:
000340 8118      	LDD  R17,Y+0
000341 9623      	ADIW R28,3
000342 9508      	RET
                 ; .FEND
                 _lcd_init:
                 ; .FSTART _lcd_init
000343 93aa      	ST   -Y,R26
000344 b3e7      	IN   R30,0x17
000345 6fe0      	ORI  R30,LOW(0xF0)
000346 bbe7      	OUT  0x17,R30
000347 9abb      	SBI  0x17,3
000348 9ab9      	SBI  0x17,1
000349 9aba      	SBI  0x17,2
00034a 98c3      	CBI  0x18,3
00034b 98c1      	CBI  0x18,1
00034c 98c2      	CBI  0x18,2
00034d 8068      	LDD  R6,Y+0
00034e 81e8      	LD   R30,Y
00034f 58e0      	SUBI R30,-LOW(128)
                +
000350 93e0 0332+STS __base_y_G100 + ( 2 ) , R30
                 	__PUTB1MN __base_y_G100,2
000352 81e8      	LD   R30,Y
000353 54e0      	SUBI R30,-LOW(192)
                +
000354 93e0 0333+STS __base_y_G100 + ( 3 ) , R30
                 	__PUTB1MN __base_y_G100,3
000356 e1a4      	LDI  R26,LOW(20)
000357 e0b0      	LDI  R27,0
000358 940e 038f 	CALL _delay_ms
00035a 940e 0387 	CALL SUBOPT_0x4
00035c 940e 0387 	CALL SUBOPT_0x4
00035e 940e 0387 	CALL SUBOPT_0x4
000360 e2a0      	LDI  R26,LOW(32)
000361 df82      	RCALL __lcd_write_nibble_G100
                +
000362 ec88     +LDI R24 , LOW ( 200 )
000363 e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
000364 9701     +SBIW R24 , 1
000365 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
000366 e2a8      	LDI  R26,LOW(40)
000367 df90      	RCALL __lcd_write_data
000368 e0a4      	LDI  R26,LOW(4)
000369 df8e      	RCALL __lcd_write_data
00036a e8a5      	LDI  R26,LOW(133)
00036b df8c      	RCALL __lcd_write_data
00036c e0a6      	LDI  R26,LOW(6)
00036d df8a      	RCALL __lcd_write_data
00036e dfa2      	RCALL _lcd_clear
                 _0x2080001:
00036f 9621      	ADIW R28,1
000370 9508      	RET
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _getchar:
                 ; .FSTART _getchar
                 getchar0:
000371 9b5f           sbis usr,rxc
000372 cffe           rjmp getchar0
000373 b1ec           in   r30,udr
000374 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 __base_y_G100:
000330           	.BYTE 0x4
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:72 WORDS
                 SUBOPT_0x0:
000375 940e 0371 	CALL _getchar
000377 2e5e      	MOV  R5,R30
000378 e0f0      	LDI  R31,0
000379 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x1:
00037a 940e 031d 	CALL _lcd_putchar
00037c cff8      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2:
00037d e9a6      	LDI  R26,LOW(150)
00037e e0b0      	LDI  R27,0
00037f 940c 038f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3:
000381 940e 02f8 	CALL __lcd_write_data
000383 e0a3      	LDI  R26,LOW(3)
000384 e0b0      	LDI  R27,0
000385 940c 038f 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x4:
000387 e3a0      	LDI  R26,LOW(48)
000388 940e 02e4 	CALL __lcd_write_nibble_G100
                +
00038a ec88     +LDI R24 , LOW ( 200 )
00038b e090     +LDI R25 , HIGH ( 200 )
                +__DELAY_USW_LOOP :
00038c 9701     +SBIW R24 , 1
00038d f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 200
00038e 9508      	RET
                 
                 
                 	.CSEG
                 _delay_ms:
00038f 9610      	adiw r26,0
000390 f039      	breq __delay_ms1
                 __delay_ms0:
000391 95a8      	wdr
                +
000392 ed80     +LDI R24 , LOW ( 0x7D0 )
000393 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000394 9701     +SBIW R24 , 1
000395 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000396 9711      	sbiw r26,1
000397 f7c9      	brne __delay_ms0
                 __delay_ms1:
000398 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   9 r6 :   2 r7 :   4 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:  21 r25:   5 r26: 214 r27:  22 r28:   4 r29:   1 r30: 151 r31:  61 
x  :   4 y  :  29 z  :   8 
Registers used: 19 out of 35 (54.3%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   1 
adiw  :   4 and   :   0 andi  :   2 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   5 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   1 
brlt  :   0 brmi  :   0 brne  :  83 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  67 
cbi   :  20 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   9 cpc   :  55 cpi   :  58 cpse  :   0 dec   :   5 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   3 inc   :   2 jmp   :  24 ld    :  12 ldd   :   7 ldi   : 193 
lds   :   0 lpm   :   7 lsl   :   0 lsr   :   0 mov   :   7 movw  :   3 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   1 
ori   :   1 out   :  23 pop   :   0 push  :   0 rcall :  44 ret   :   8 
reti  :   0 rjmp  :  57 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :  22 sbic  :   0 sbis  :   1 sbiw  :  16 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  13 std   :   2 sts   :   2 sub   :   0 subi  :   3 swap  :   1 
tst   :   0 wdr   :   1 
Instructions used: 39 out of 116 (33.6%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000732   1720    122   1842   32768   5.6%
[.dseg] 0x000060 0x000334      0    212    212    2048  10.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 4 warnings
