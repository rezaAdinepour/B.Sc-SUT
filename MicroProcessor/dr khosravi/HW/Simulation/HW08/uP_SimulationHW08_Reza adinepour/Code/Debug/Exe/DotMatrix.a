;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;const unsigned char data[72]=
;{
;    0x38,    //    0001        . . # # # . . .
;    0x22,    //    0002        . . # . . . # .
;    0x22,    //    0003        . . # . . . # .
;    0x22,    //    0004        . . # . . . # .
;    0x38,    //    0005        . . # # # . . .
;    0x20,    //    0006        . . # . . . . .
;    0x30,    //    0007        . . # # . . . .
;    0x18,    //    0008        . . . # # . . .
;    0x10,    //    0009        . . . # . . . .
;    0x18,    //    000A        . . . # # . . .
;    0x10,    //    000B        . . . # . . . .
;    0x18,    //    000C        . . . # # . . .
;    0xFF,    //    000D        # # # # # # # #
;    0x00,    //    000E        . . . . . . . .
;    0xFC,    //    000F        # # # # # # . .
;    0xB4,    //    0010        # . # # . # . .
;    0xB4,    //    0011        # . # # . # . .
;    0xFC,    //    0012        # # # # # # . .
;    0x00,    //    0013        . . . . . . . .
;    0x00,    //    0014        . . . . . . . .
;    0x84,    //    0015        # . . . . # . .
;    0xFC,    //    0016        # # # # # # . .
;    0x78,    //    0017        . # # # # . . .
;    0x20,    //    0018        . . # . . . . .
;    0x2C,    //    0019        . . # . # # . .
;    0x2C,    //    001A        . . # . # # . .
;    0x20,    //    001B        . . # . . . . .
;    0x38,    //    001C        . . # # # . . .
;    0x20,    //    001D        . . # . . . . .
;    0x20,    //    001E        . . # . . . . .
;    0xF8,    //    001F        # # # # # . . .
;    0xA8,    //    0020        # . # . # . . .
;    0xA8,    //    0021        # . # . # . . .
;    0xA8,    //    0022        # . # . # . . .
;    0xF8,    //    0023        # # # # # . . .
;    0x00,    //    0024        . . . . . . . .
;    0x00,    //    0025        . . . . . . . .
;    0x84,    //    0026        # . . . . # . .
;    0x84,    //    0027        # . . . . # . .
;    0xFC,    //    0028        # # # # # # . .
;    0x78,    //    0029        . # # # # . . .
;    0x00,    //    002A        . . . . . . . .
;    0x00,    //    002B        . . . . . . . .
;    0xFC,    //    002C        # # # # # # . .
;    0xFC,    //    002D        # # # # # # . .
;    0x80,    //    002E        # . . . . . . .
;    0x80,    //    002F        # . . . . . . .
;    0x80,    //    0030        # . . . . . . .
;    0xBC,    //    0031        # . # # # # . .
;    0xA4,    //    0032        # . # . . # . .
;    0xE4,    //    0033        # # # . . # . .
;    0x04,    //    0034        . . . . . # . .
;    0x80,    //    0035        # . . . . . . .
;    0x80,    //    0036        # . . . . . . .
;    0xC0,    //    0037        # # . . . . . .
;    0xFC,    //    0038        # # # # # # . .
;    0x00,    //    0039        . . . . . . . .
;    0x00,    //    003A        . . . . . . . .
;    0x3F,    //    003B        . . # # # # # #
;    0x3F,    //    003C        . . # # # # # #
;    0xA0,    //    003D        # . # . . . . .
;    0xA0,    //    003E        # . # . . . . .
;    0x30,    //    003F        . . # # . . . .
;    0x30,    //    0040        . . # # . . . .
;    0x00,    //    0041        . . . . . . . .
;    0x9C,    //    0042        # . . # # # . .
;    0x94,    //    0043        # . . # . # . .
;    0x94,    //    0044        # . . # . # . .
;    0xFC,    //    0045        # # # # # # . .
;    0x00,    //    0046        . . . . . . . .
;	0xFF,	//	0047		# # # # # # # #
;	0xFF 	//	0048		# # # # # # # #
;};
;
;
;
;
;
;// ========== Right to Left ==========
;
;char faal_saz[8] = {254, 253, 251, 247, 239, 223, 191, 127};

	.DSEG
;
;void main(void)
; 0000 005A {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 005B     unsigned int i=0,j=0,k=0,timer=0;
; 0000 005C     DDRA = 0xFF;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;	i -> R16,R17
;	j -> R18,R19
;	k -> R20,R21
;	timer -> Y+0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 005D     DDRB = 0xFF;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 005E     DDRC = 0xFF;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 005F     DDRD = 0xFF;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0060 
; 0000 0061     while(1)
;PCODE: $00000021 VOL: 0
; 0000 0062     {
; 0000 0063         for(j = 0; j <= 63; j++)
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0064         {
; 0000 0065             for(timer = 0; timer < 5; timer++)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0066             {
; 0000 0067                 for(i = j; i <= j+7; i++)
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0068                 {
; 0000 0069                     PORTA = data[i+10];
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 006A                     PORTB = faal_saz[k];
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 006B                     PORTC = data[i];
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 006C                     PORTD = faal_saz[k];
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 006D                     k++;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 006E                     delay_ms(5);
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 006F                     PORTA = 0;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0070                     PORTB = 255;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0071                     PORTC = 0;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0072                     PORTD = 255;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0073                 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0074                 k = 0;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0075             }
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0076         }
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0077 
; 0000 0078     }
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0079 }
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
