
AVRASM ver. 2.1.30  E:\University\Electerical\MicroProcessor\Dr Khosravi\HW\Simulation\HW08\SimulationHW08_Reza adinepour\Code\Debug\List\DotMatrix.asm Sun Jan 02 12:07:27 2022

                 
                 
                 ;CodeVisionAVR C Compiler V3.14 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega32
                 ;Program type           : Application
                 ;Clock frequency        : 8.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 512 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega32
                 	#pragma AVRPART MEMORY PROG_FLASH 32768
                 	#pragma AVRPART MEMORY EEPROM 1024
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x085F
                 	.EQU __DSTACK_SIZE=0x0200
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 0056 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _data:
00002a 2238
00002b 2222
00002c 2038
00002d 1830      	.DB  0x38,0x22,0x22,0x22,0x38,0x20,0x30,0x18
00002e 1810
00002f 1810
000030 00ff
000031 b4fc      	.DB  0x10,0x18,0x10,0x18,0xFF,0x0,0xFC,0xB4
000032 fcb4
000033 0000
000034 fc84
000035 2078      	.DB  0xB4,0xFC,0x0,0x0,0x84,0xFC,0x78,0x20
000036 2c2c
000037 3820
000038 2020
000039 a8f8      	.DB  0x2C,0x2C,0x20,0x38,0x20,0x20,0xF8,0xA8
00003a a8a8
00003b 00f8
00003c 8400
00003d fc84      	.DB  0xA8,0xA8,0xF8,0x0,0x0,0x84,0x84,0xFC
00003e 0078
00003f fc00
000040 80fc
000041 8080      	.DB  0x78,0x0,0x0,0xFC,0xFC,0x80,0x80,0x80
000042 a4bc
000043 04e4
000044 8080
000045 fcc0      	.DB  0xBC,0xA4,0xE4,0x4,0x80,0x80,0xC0,0xFC
000046 0000
000047 3f3f
000048 a0a0
000049 3030      	.DB  0x0,0x0,0x3F,0x3F,0xA0,0xA0,0x30,0x30
00004a 9c00
00004b 9494
00004c 00fc
00004d ffff      	.DB  0x0,0x9C,0x94,0x94,0xFC,0x0,0xFF,0xFF
                 
                 _0x3:
00004e fdfe
00004f f7fb
000050 dfef
000051 7fbf      	.DB  0xFE,0xFD,0xFB,0xF7,0xEF,0xDF,0xBF,0x7F
                 
                 __GLOBAL_INI_TBL:
000052 0008      	.DW  0x08
000053 0260      	.DW  _faal_saz
000054 009c      	.DW  _0x3*2
                 
                 _0xFFFFFFFF:
000055 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
000056 94f8      	CLI
000057 27ee      	CLR  R30
000058 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000059 e0f1      	LDI  R31,1
00005a bffb      	OUT  GICR,R31
00005b bfeb      	OUT  GICR,R30
00005c bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
00005d e08d      	LDI  R24,(14-2)+1
00005e e0a2      	LDI  R26,2
00005f 27bb      	CLR  R27
                 __CLEAR_REG:
000060 93ed      	ST   X+,R30
000061 958a      	DEC  R24
000062 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000063 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000064 e098      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
000065 e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
000066 93ed      	ST   X+,R30
000067 9701      	SBIW R24,1
000068 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000069 eae4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00006a e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00006b 9185      	LPM  R24,Z+
00006c 9195      	LPM  R25,Z+
00006d 9700      	SBIW R24,0
00006e f061      	BREQ __GLOBAL_INI_END
00006f 91a5      	LPM  R26,Z+
000070 91b5      	LPM  R27,Z+
000071 9005      	LPM  R0,Z+
000072 9015      	LPM  R1,Z+
000073 01bf      	MOVW R22,R30
000074 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000075 9005      	LPM  R0,Z+
000076 920d      	ST   X+,R0
000077 9701      	SBIW R24,1
000078 f7e1      	BRNE __GLOBAL_INI_LOOP
000079 01fb      	MOVW R30,R22
00007a cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
00007b e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
00007c bfed      	OUT  SPL,R30
00007d e0e8      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
00007e bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00007f e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000080 e0d2      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000081 940c 0083 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x260
                 
                 	.CSEG
                 ;#include <mega32.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x80
                 	.EQU __sm_mask=0x70
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0x60
                 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;
                 ;const unsigned char data[72]=
                 ;{
                 ;    0x38,    //    0001        . . # # # . . .
                 ;    0x22,    //    0002        . . # . . . # .
                 ;    0x22,    //    0003        . . # . . . # .
                 ;    0x22,    //    0004        . . # . . . # .
                 ;    0x38,    //    0005        . . # # # . . .
                 ;    0x20,    //    0006        . . # . . . . .
                 ;    0x30,    //    0007        . . # # . . . .
                 ;    0x18,    //    0008        . . . # # . . .
                 ;    0x10,    //    0009        . . . # . . . .
                 ;    0x18,    //    000A        . . . # # . . .
                 ;    0x10,    //    000B        . . . # . . . .
                 ;    0x18,    //    000C        . . . # # . . .
                 ;    0xFF,    //    000D        # # # # # # # #
                 ;    0x00,    //    000E        . . . . . . . .
                 ;    0xFC,    //    000F        # # # # # # . .
                 ;    0xB4,    //    0010        # . # # . # . .
                 ;    0xB4,    //    0011        # . # # . # . .
                 ;    0xFC,    //    0012        # # # # # # . .
                 ;    0x00,    //    0013        . . . . . . . .
                 ;    0x00,    //    0014        . . . . . . . .
                 ;    0x84,    //    0015        # . . . . # . .
                 ;    0xFC,    //    0016        # # # # # # . .
                 ;    0x78,    //    0017        . # # # # . . .
                 ;    0x20,    //    0018        . . # . . . . .
                 ;    0x2C,    //    0019        . . # . # # . .
                 ;    0x2C,    //    001A        . . # . # # . .
                 ;    0x20,    //    001B        . . # . . . . .
                 ;    0x38,    //    001C        . . # # # . . .
                 ;    0x20,    //    001D        . . # . . . . .
                 ;    0x20,    //    001E        . . # . . . . .
                 ;    0xF8,    //    001F        # # # # # . . .
                 ;    0xA8,    //    0020        # . # . # . . .
                 ;    0xA8,    //    0021        # . # . # . . .
                 ;    0xA8,    //    0022        # . # . # . . .
                 ;    0xF8,    //    0023        # # # # # . . .
                 ;    0x00,    //    0024        . . . . . . . .
                 ;    0x00,    //    0025        . . . . . . . .
                 ;    0x84,    //    0026        # . . . . # . .
                 ;    0x84,    //    0027        # . . . . # . .
                 ;    0xFC,    //    0028        # # # # # # . .
                 ;    0x78,    //    0029        . # # # # . . .
                 ;    0x00,    //    002A        . . . . . . . .
                 ;    0x00,    //    002B        . . . . . . . .
                 ;    0xFC,    //    002C        # # # # # # . .
                 ;    0xFC,    //    002D        # # # # # # . .
                 ;    0x80,    //    002E        # . . . . . . .
                 ;    0x80,    //    002F        # . . . . . . .
                 ;    0x80,    //    0030        # . . . . . . .
                 ;    0xBC,    //    0031        # . # # # # . .
                 ;    0xA4,    //    0032        # . # . . # . .
                 ;    0xE4,    //    0033        # # # . . # . .
                 ;    0x04,    //    0034        . . . . . # . .
                 ;    0x80,    //    0035        # . . . . . . .
                 ;    0x80,    //    0036        # . . . . . . .
                 ;    0xC0,    //    0037        # # . . . . . .
                 ;    0xFC,    //    0038        # # # # # # . .
                 ;    0x00,    //    0039        . . . . . . . .
                 ;    0x00,    //    003A        . . . . . . . .
                 ;    0x3F,    //    003B        . . # # # # # #
                 ;    0x3F,    //    003C        . . # # # # # #
                 ;    0xA0,    //    003D        # . # . . . . .
                 ;    0xA0,    //    003E        # . # . . . . .
                 ;    0x30,    //    003F        . . # # . . . .
                 ;    0x30,    //    0040        . . # # . . . .
                 ;    0x00,    //    0041        . . . . . . . .
                 ;    0x9C,    //    0042        # . . # # # . .
                 ;    0x94,    //    0043        # . . # . # . .
                 ;    0x94,    //    0044        # . . # . # . .
                 ;    0xFC,    //    0045        # # # # # # . .
                 ;    0x00,    //    0046        . . . . . . . .
                 ;	0xFF,	//	0047		# # # # # # # #
                 ;	0xFF 	//	0048		# # # # # # # #
                 ;};
                 ;
                 ;
                 ;
                 ;
                 ;
                 ;// ========== Right to Left ==========
                 ;
                 ;char faal_saz[8] = {254, 253, 251, 247, 239, 223, 191, 127};
                 
                 	.DSEG
                 ;
                 ;void main(void)
                 ; 0000 005A {
                 
                 	.CSEG
                 _main:
                 ; .FSTART _main
                 ; 0000 005B     unsigned int i=0,j=0,k=0,timer=0;
                 ; 0000 005C     DDRA = 0xFF;
000083 9722      	SBIW R28,2
000084 e0e0      	LDI  R30,LOW(0)
000085 83e8      	ST   Y,R30
000086 83e9      	STD  Y+1,R30
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	timer -> Y+0
                +
000087 e000     +LDI R16 , LOW ( 0 )
000088 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
000089 e020     +LDI R18 , LOW ( 0 )
00008a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00008b e040     +LDI R20 , LOW ( 0 )
00008c e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00008d efef      	LDI  R30,LOW(255)
00008e bbea      	OUT  0x1A,R30
                 ; 0000 005D     DDRB = 0xFF;
00008f bbe7      	OUT  0x17,R30
                 ; 0000 005E     DDRC = 0xFF;
000090 bbe4      	OUT  0x14,R30
                 ; 0000 005F     DDRD = 0xFF;
000091 bbe1      	OUT  0x11,R30
                 ; 0000 0060 
                 ; 0000 0061     while(1)
                 _0x4:
                 ; 0000 0062     {
                 ; 0000 0063         for(j = 0; j <= 63; j++)
                +
000092 e020     +LDI R18 , LOW ( 0 )
000093 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x8:
                +
000094 3420     +CPI R18 , LOW ( 64 )
000095 e0e0     +LDI R30 , HIGH ( 64 )
000096 073e     +CPC R19 , R30
                 	__CPWRN 18,19,64
000097 f008      	BRLO PC+2
000098 c03f      	RJMP _0x9
                 ; 0000 0064         {
                 ; 0000 0065             for(timer = 0; timer < 5; timer++)
000099 e0e0      	LDI  R30,LOW(0)
00009a 83e8      	STD  Y+0,R30
00009b 83e9      	STD  Y+0+1,R30
                 _0xB:
00009c 81a8      	LD   R26,Y
00009d 81b9      	LDD  R27,Y+1
00009e 9715      	SBIW R26,5
00009f f5a8      	BRSH _0xC
                 ; 0000 0066             {
                 ; 0000 0067                 for(i = j; i <= j+7; i++)
0000a0 0189      	MOVW R16,R18
                 _0xE:
0000a1 01f9      	MOVW R30,R18
0000a2 9637      	ADIW R30,7
0000a3 17e0      	CP   R30,R16
0000a4 07f1      	CPC  R31,R17
0000a5 f138      	BRLO _0xF
                 ; 0000 0068                 {
                 ; 0000 0069                     PORTA = data[i+10];
0000a6 01f8      	MOVW R30,R16
                +
0000a7 5ae2     +SUBI R30 , LOW ( - 2 * _data - ( 10 ) )
0000a8 4fff     +SBCI R31 , HIGH ( - 2 * _data - ( 10 ) )
                 	__ADDW1FN _data,10
0000a9 9004      	LPM  R0,Z
0000aa ba0b      	OUT  0x1B,R0
                 ; 0000 006A                     PORTB = faal_saz[k];
0000ab e6a0      	LDI  R26,LOW(_faal_saz)
0000ac e0b2      	LDI  R27,HIGH(_faal_saz)
0000ad 0fa4      	ADD  R26,R20
0000ae 1fb5      	ADC  R27,R21
0000af 91ec      	LD   R30,X
0000b0 bbe8      	OUT  0x18,R30
                 ; 0000 006B                     PORTC = data[i];
0000b1 01f8      	MOVW R30,R16
0000b2 5aec      	SUBI R30,LOW(-_data*2)
0000b3 4fff      	SBCI R31,HIGH(-_data*2)
0000b4 9004      	LPM  R0,Z
0000b5 ba05      	OUT  0x15,R0
                 ; 0000 006C                     PORTD = faal_saz[k];
0000b6 e6a0      	LDI  R26,LOW(_faal_saz)
0000b7 e0b2      	LDI  R27,HIGH(_faal_saz)
0000b8 0fa4      	ADD  R26,R20
0000b9 1fb5      	ADC  R27,R21
0000ba 91ec      	LD   R30,X
0000bb bbe2      	OUT  0x12,R30
                 ; 0000 006D                     k++;
                +
0000bc 5f4f     +SUBI R20 , LOW ( - 1 )
0000bd 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0000 006E                     delay_ms(5);
0000be e0a5      	LDI  R26,LOW(5)
0000bf e0b0      	LDI  R27,0
0000c0 940e 00da 	CALL _delay_ms
                 ; 0000 006F                     PORTA = 0;
0000c2 e0e0      	LDI  R30,LOW(0)
0000c3 bbeb      	OUT  0x1B,R30
                 ; 0000 0070                     PORTB = 255;
0000c4 efef      	LDI  R30,LOW(255)
0000c5 bbe8      	OUT  0x18,R30
                 ; 0000 0071                     PORTC = 0;
0000c6 e0e0      	LDI  R30,LOW(0)
0000c7 bbe5      	OUT  0x15,R30
                 ; 0000 0072                     PORTD = 255;
0000c8 efef      	LDI  R30,LOW(255)
0000c9 bbe2      	OUT  0x12,R30
                 ; 0000 0073                 }
                +
0000ca 5f0f     +SUBI R16 , LOW ( - 1 )
0000cb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0000cc cfd4      	RJMP _0xE
                 _0xF:
                 ; 0000 0074                 k = 0;
                +
0000cd e040     +LDI R20 , LOW ( 0 )
0000ce e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 ; 0000 0075             }
0000cf 81e8      	LD   R30,Y
0000d0 81f9      	LDD  R31,Y+1
0000d1 9631      	ADIW R30,1
0000d2 83e8      	ST   Y,R30
0000d3 83f9      	STD  Y+1,R31
0000d4 cfc7      	RJMP _0xB
                 _0xC:
                 ; 0000 0076         }
                +
0000d5 5f2f     +SUBI R18 , LOW ( - 1 )
0000d6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0000d7 cfbc      	RJMP _0x8
                 _0x9:
                 ; 0000 0077 
                 ; 0000 0078     }
0000d8 cfb9      	RJMP _0x4
                 ; 0000 0079 }
                 _0x10:
0000d9 cfff      	RJMP _0x10
                 ; .FEND
                 
                 	.DSEG
                 _faal_saz:
000260           	.BYTE 0x8
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
0000da 9610      	adiw r26,0
0000db f039      	breq __delay_ms1
                 __delay_ms0:
0000dc 95a8      	wdr
                +
0000dd ed80     +LDI R24 , LOW ( 0x7D0 )
0000de e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
0000df 9701     +SBIW R24 , 1
0000e0 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
0000e1 9711      	sbiw r26,1
0000e2 f7c9      	brne __delay_ms0
                 __delay_ms1:
0000e3 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega32 register use summary:
r0 :   8 r1 :   1 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   6 r17:   3 r18:   6 r19:   4 r20:   5 r21:   5 r22:   2 r23:   0 
r24:   9 r25:   3 r26:  12 r27:   8 r28:   2 r29:   1 r30:  49 r31:   8 
x  :   5 y  :  10 z  :   9 
Registers used: 20 out of 35 (57.1%)

ATmega32 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   2 add   :   2 
adiw  :   3 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :   2 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   2 
brlt  :   0 brmi  :   0 brne  :   5 brpl  :   0 brsh  :   1 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :   1 
cbi   :   0 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   2 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   2 cpi   :   1 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   0 inc   :   0 jmp   :  22 ld    :   4 ldd   :   2 ldi   :  38 
lds   :   0 lpm   :  11 lsl   :   0 lsr   :   0 mov   :   0 movw  :   7 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  18 pop   :   0 push  :   0 rcall :   0 ret   :   1 
reti  :   0 rjmp  :   7 rol   :   0 ror   :   0 sbc   :   0 sbci  :   5 
sbi   :   0 sbic  :   0 sbis  :   0 sbiw  :   7 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :   5 std   :   4 sts   :   0 sub   :   0 subi  :   5 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 29 out of 116 (25.0%)

ATmega32 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0001c8    368     88    456   32768   1.4%
[.dseg] 0x000060 0x000268      0      8      8    2048   0.4%
[.eseg] 0x000000 0x000000      0      0      0    1024   0.0%

Assembly complete, 0 errors, 0 warnings
