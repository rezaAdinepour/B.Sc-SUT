;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;
;#define btn0 PINA.0
;#define btn1 PINA.1
;#define TLLR PORTB.0
;#define TLLY PORTB.1
;#define TLLG PORTB.2
;#define TLRR PORTB.3
;#define TLRY PORTB.4
;#define TLRG PORTB.5
;#define on 1
;#define off 0
;
;
;unsigned char p = 0x73, digit[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}, t1 = 0, t2 = 0, t3 = 0 ...

	.DSEG
;enum st
;{
;    police,
;    traficLight1,
;    traficLight2,
;    blinker
;}state;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 001A {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001B     t1++;
;PCODE: $0000000F VOL: 0
; 0000 001C     t2++;
;PCODE: $00000010 VOL: 0
; 0000 001D     t3++;
;PCODE: $00000011 VOL: 0
; 0000 001E     t4++;
;PCODE: $00000012 VOL: 0
; 0000 001F }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;void main(void)
; 0000 0022 {
;PCODE: $00000016 VOL: 0
; 0000 0023     DDRA = 0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0024     PORTA = 0xff;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 0025 
; 0000 0026     DDRB = 0xff;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0027     PORTB = 0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0028 
; 0000 0029     DDRC = 0xff;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002A     PORTC = 0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 002B 
; 0000 002C     DDRD = 0xff;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002D     PORTD = 0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 002E 
; 0000 002F 
; 0000 0030     // Timer/Counter 0 initialization
; 0000 0031     // Clock source: System Clock
; 0000 0032     // Clock value: 7.813 kHz
; 0000 0033     // Mode: Normal top=0xFF
; 0000 0034     // OC0 output: Disconnected
; 0000 0035     // Timer Period: 32.768 ms
; 0000 0036     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (1<<CS00);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0037     TCNT0=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0038     OCR0=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0039 
; 0000 003A     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 003B     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (0<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 003C 
; 0000 003D 
; 0000 003E #asm("sei")
;PCODE: $0000002F VOL: 0
	sei
;PCODE: $00000030 VOL: 0
; 0000 003F 
; 0000 0040     while (1)
;PCODE: $00000031 VOL: 0
; 0000 0041     {
; 0000 0042         switch(state)
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0043         {
; 0000 0044             case(police):
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0045                 PORTC = p;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0046                 PORTB = 0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0047                 PORTD = 0x00;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0048                 if((btn0 == 0) && (btn1 == 1))
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0049                 {
; 0000 004A                     state = traficLight1;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004B                     t1 = t2 = t3 = 0;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004C                     i = 7;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004D                     PORTC = 0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 004E                     TLLR = TLRG = on;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 004F                 }
; 0000 0050                 if((btn0 == 1) && (btn1 == 0))
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0051                     state = traficLight2;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0052                 if((btn0 == 0) && (btn1 == 0))
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0053                     state = blinker;
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0054             break;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
; 0000 0055 
; 0000 0056             case(traficLight1):
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 0057 
; 0000 0058                 if(t1 > 187)
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0059                 {
; 0000 005A                     t1 = 0;
;PCODE: $00000076 VOL: 0
; 0000 005B                     TLLR = TLRG = off;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 005C                     TLLY = TLRY = on;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 005D                     if(t2 > 31)
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 005E                     {
; 0000 005F                         t2 = 0;
;PCODE: $00000082 VOL: 0
; 0000 0060                         TLLY = TLRY = off;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0061                         TLLG = TLRR = on;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0062                         t3 = 0;
;PCODE: $0000008B VOL: 0
; 0000 0063                         if(t3 > 125)
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0064                         {
; 0000 0065                             t3 = 0;
;PCODE: $0000008F VOL: 0
; 0000 0066                             TLLG = TLRR = off;
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
; 0000 0067                         }
; 0000 0068                     }
;PCODE: $00000094 VOL: 0
; 0000 0069                 }
;PCODE: $00000095 VOL: 0
; 0000 006A                 /*PORTD = digit[i];
; 0000 006B                 if(t4 > 31)
; 0000 006C                 {
; 0000 006D                     t4 = 0;
; 0000 006E                     i--;
; 0000 006F                 }*/
; 0000 0070 
; 0000 0071 
; 0000 0072             break;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 0073 
; 0000 0074         }
;PCODE: $00000098 VOL: 0
; 0000 0075         /*else if((btn0 == 0) && (btn1 == 1))
; 0000 0076         {
; 0000 0077             if(t1 > 187)
; 0000 0078             {
; 0000 0079                 //t1 = 0;
; 0000 007A                 PORTC = 0x00;
; 0000 007B                 TLLG = TLRR = on;
; 0000 007C             }
; 0000 007D             else if(t3 > 31)
; 0000 007E             {
; 0000 007F                 TLLG = TLRR = off;
; 0000 0080                 //PORTD = digit[i];
; 0000 0081                 TLLY = TLRY = on;
; 0000 0082             }
; 0000 0083             else if()
; 0000 0084         }*/
; 0000 0085 
; 0000 0086     }
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0087 }
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
