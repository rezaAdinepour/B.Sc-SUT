;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;#define R PINA.0
;#define L PINA.1
;#define S PINA.2
;#define RM PORTC.0
;#define LM PORTC.1
;#define RLED PORTD.3
;#define LLED PORTD.4
;#define on 1
;#define off 0
;
;enum st{OFF, right, left, stop}state;
;
;void main(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0012     DDRA = 0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0013     PORTA = 0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0014 
; 0000 0015     DDRD = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0016     PORTD = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0017 
; 0000 0018     DDRC = 0xff;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0019     PORTC = 0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001A 
; 0000 001B     DDRB = 0xff;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001C     PORTB = 0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001D 
; 0000 001E 
; 0000 001F 
; 0000 0020     while (1)
;PCODE: $0000001E VOL: 0
; 0000 0021     {
; 0000 0022         switch(state)
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0023         {
; 0000 0024             case OFF:
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0025                 R = L = on;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0026                 RM = LM = off;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0027                 if(R == 0)
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0028                     state = right;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0029                 if(L == 0)
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002A                     state = left;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 002B             break;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002C 
; 0000 002D             case right:
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 002E                 RM = off;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002F                 LM = on;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0030                 RLED = on;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0031                 delay_ms(100);
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0032                 RLED = off;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0033                 delay_ms(100);
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0034                 if(S == 0)
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0035                     state = stop;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0036                 if(R == 1)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0037                     state = OFF;
;PCODE: $00000052 VOL: 0
; 0000 0038                 if(L == 0)
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0039                     state = left;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 003A             break;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 003B 
; 0000 003C             case left:
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 003D                 RM = on;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 003E                 LM = off;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 003F                 LLED = on;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0040                 delay_ms(100);
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 0041                 LLED = off;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0042                 delay_ms(100);
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0043                 if(S == 0)
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0044                     state = stop;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0045                 if(L == 1)
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0046                     state = OFF;
;PCODE: $00000075 VOL: 0
; 0000 0047                 if(R == 0)
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0048                     state = right;
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 0049             break;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 004A 
; 0000 004B             case stop:
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 004C                 R = L = on;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 004D                 RLED = off;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 004E                 RM = LM = off;
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 004F                 if(S == 1 && L == 0)
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0050                     state = left;
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 0051                 if(S == 1 && R == 0)
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0052                     state = right;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0053         }//End Switch()
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0054     }//End While(1)
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0055 }//End main()
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
