;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;#define d1 PINB.2
;#define d2 PINB.3
;
;unsigned char i = 1;
;
;void main(void)
; 0000 000B {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 000C     DDRB = 0x00;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 000D     PORTB = 0xff;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 000E 
; 0000 000F     DDRD = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0010     PORTD = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0011 
; 0000 0012 
; 0000 0013     while (1)
;PCODE: $00000016 VOL: 0
; 0000 0014     {
; 0000 0015         if( (d1 == 0)&&(d2 == 0) == 1 )
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0016         {
; 0000 0017             while((d1 == 0)&&(d2 == 0) == 1)
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0018             {
; 0000 0019                 PORTD = 0xaa;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 001A                 delay_ms(200);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 001B                 PORTD = 0x55;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 001C                 delay_ms(200);
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 001D             }
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 001E         }
; 0000 001F         else
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0020             PORTD = 0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0021 
; 0000 0022         if(d1 == 0)
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 0023         {
; 0000 0024             while(d1 == 0)
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0025             {
; 0000 0026                 PORTD = 0xff;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0027                 delay_ms(500);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0028                 PORTD = 0x00;
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0029                 delay_ms(500);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 002A             }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 002B         }
; 0000 002C         else
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 002D             PORTD = 0x00;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 002E 
; 0000 002F         if(d2 == 0)
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
; 0000 0030         {
; 0000 0031             while(d2 == 0)
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0032             {
; 0000 0033                 for(i = 1; i < 128; i<<=1)
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0034                 {
; 0000 0035                     PORTD = i;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0036                     delay_ms(200);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0037                 }
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0038                 for(i = 128; i > 0; i>>=1)
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0039                 {
; 0000 003A                     PORTD = i;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 003B                     delay_ms(200);
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 003C                 }
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 003D             }
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 003E         }
; 0000 003F 
; 0000 0040         else
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 0041             PORTD = 0x00;
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0042     }
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 0043 }
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
