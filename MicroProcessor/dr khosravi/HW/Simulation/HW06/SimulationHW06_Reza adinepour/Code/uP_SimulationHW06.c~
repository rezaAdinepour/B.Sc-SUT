#include <mega32.h>
#include <delay.h>



#define display PORTC
#define com PORTA



unsigned char digit[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}, i = 0, j = 0, k = 0, t1 = 0, p = 25;



interrupt [EXT_INT1] void ext_int1_isr(void)
{
    i = j = k = p = 0;
}


interrupt [TIM0_OVF] void timer0_ovf_isr(void)
{
    i++;
    t1++;
}


interrupt [TIM1_OVF] void timer1_ovf_isr(void)
{
    p = 0;
}

void main(void)
{
    DDRA = 0xff;
    PORTA = 0x00;
    
    DDRB = 0x00;
    PORTB = 0x00;
    
    DDRC = 0xff;
    PORTC = 0x00;
    
    DDRD = 0x30;
    PORTD = 0x00;

    // Timer/Counter 0 initialization
    // Clock source: System Clock
    // Clock value: 31.250 kHz
    // Mode: Normal top=0xFF
    // OC0 output: Disconnected
    // Timer Period: 8.192 ms
    TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
    TCNT0=0x00;
    OCR0=0x00;

    // Timer/Counter 1 initialization
    // Clock source: System Clock
    // Clock value: 125.000 kHz
    // Mode: Fast PWM top=0x00FF
    // OC1A output: Non-Inverted PWM
    // OC1B output: Non-Inverted PWM
    // Noise Canceler: Off
    // Input Capture on Falling Edge
    // Timer Period: 2.048 ms
    // Output Pulse(s):
    // OC1A Period: 2.048 ms Width: 0 us    // OC1B Period: 2.048 ms Width: 0 us
    // Timer1 Overflow Interrupt: On
    // Input Capture Interrupt: Off
    // Compare A Match Interrupt: Off
    // Compare B Match Interrupt: Off
    TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
    TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
    TCNT1H=0x00;
    TCNT1L=0x00;
    ICR1H=0x00;
    ICR1L=0x00;
    OCR1AH=0x00;
    OCR1AL=0x00;
    OCR1BH=0x00;
    OCR1BL=0x00;

    // Timer(s)/Counter(s) Interrupt(s) initialization
    TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);

    // External Interrupt(s) initialization
    // INT0: Off
    // INT1: On
    // INT1 Mode: Falling Edge
    // INT2: Off
    GICR|=(1<<INT1) | (0<<INT0) | (0<<INT2);
    MCUCR=(1<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
    MCUCSR=(0<<ISC2);
    GIFR=(1<<INTF1) | (0<<INTF0) | (0<<INTF2);

    #asm("sei")

    while (1)
    {
        if(i >= 6)
        {
            i = 0;
            j++;
            if(j == 90)
            {
                j = 0;
                k++;
            }  
        }
        OCR1AL = p; 
        if(t1 >= 244)
        {
            t1 = 0;
            p += 25; 
        }      
        
        display = digit[j / 10];
        com = 0xfb; //1111 1011
        delay_us(250);
        com = 0xff; 
        display = digit[j % 10];
        com = 0xf7; //1111 0111
        delay_us(250);
        com = 0xff;
        
        display = digit[k / 10];
        com = 0xfe; //1111 1110
        delay_us(250);
        com = 0xff; 
        display = digit[k % 10];
        com = 0xfd; //1111 1101
        delay_us(250);
        com = 0xff;
    }//End While(1)
}//End manin()