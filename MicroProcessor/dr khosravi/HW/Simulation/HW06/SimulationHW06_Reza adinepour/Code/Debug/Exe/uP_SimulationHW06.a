;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;
;#define display PORTC
;#define com PORTA
;
;
;
;unsigned char digit[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F}, i = 0, j = 0, k = 0, t1 = 0, p = ...

	.DSEG
;
;
;
;interrupt [EXT_INT1] void ext_int1_isr(void)
; 0000 0010 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0011     i = j = k = p = 0;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0012 }
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 0016 {
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0017     i++;
;PCODE: $00000019 VOL: 0
; 0000 0018     t1++;
;PCODE: $0000001A VOL: 0
; 0000 0019 }
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 001D {
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001E 
; 0000 001F }
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;
;void main(void)
; 0000 0022 {
;PCODE: $00000023 VOL: 0
; 0000 0023     DDRA = 0xff;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0024     PORTA = 0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0025 
; 0000 0026     DDRB = 0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0027     PORTB = 0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0028 
; 0000 0029     DDRC = 0xff;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 002A     PORTC = 0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 002B 
; 0000 002C     DDRD = 0x30;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 002D     PORTD = 0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 002E 
; 0000 002F     // Timer/Counter 0 initialization
; 0000 0030     // Clock source: System Clock
; 0000 0031     // Clock value: 31.250 kHz
; 0000 0032     // Mode: Normal top=0xFF
; 0000 0033     // OC0 output: Disconnected
; 0000 0034     // Timer Period: 8.192 ms
; 0000 0035     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (1<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0036     TCNT0=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0037     OCR0=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 0038 
; 0000 0039     // Timer/Counter 1 initialization
; 0000 003A     // Clock source: System Clock
; 0000 003B     // Clock value: 125.000 kHz
; 0000 003C     // Mode: Fast PWM top=0x00FF
; 0000 003D     // OC1A output: Non-Inverted PWM
; 0000 003E     // OC1B output: Non-Inverted PWM
; 0000 003F     // Noise Canceler: Off
; 0000 0040     // Input Capture on Falling Edge
; 0000 0041     // Timer Period: 2.048 ms
; 0000 0042     // Output Pulse(s):
; 0000 0043     // OC1A Period: 2.048 ms Width: 0 us    // OC1B Period: 2.048 ms Width: 0 us
; 0000 0044     // Timer1 Overflow Interrupt: On
; 0000 0045     // Input Capture Interrupt: Off
; 0000 0046     // Compare A Match Interrupt: Off
; 0000 0047     // Compare B Match Interrupt: Off
; 0000 0048     TCCR1A=(1<<COM1A1) | (0<<COM1A0) | (1<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (1<<WGM10);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0049     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (1<<CS10);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 004A     TCNT1H=0x00;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 004B     TCNT1L=0x00;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 004C     ICR1H=0x00;
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 004D     ICR1L=0x00;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 004E     OCR1AH=0x00;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 004F     OCR1AL=0x00;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0050     OCR1BH=0x00;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0051     OCR1BL=0x00;
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0052 
; 0000 0053     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0054     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (1<<TOIE0);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0055 
; 0000 0056     // External Interrupt(s) initialization
; 0000 0057     // INT0: Off
; 0000 0058     // INT1: On
; 0000 0059     // INT1 Mode: Falling Edge
; 0000 005A     // INT2: Off
; 0000 005B     GICR|=(1<<INT1) | (0<<INT0) | (0<<INT2);
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 005C     MCUCR=(1<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 005D     MCUCSR=(0<<ISC2);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 005E     GIFR=(1<<INTF1) | (0<<INTF0) | (0<<INTF2);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 005F 
; 0000 0060     #asm("sei")
;PCODE: $00000059 VOL: 0
	sei
;PCODE: $0000005A VOL: 0
; 0000 0061 
; 0000 0062     while (1)
;PCODE: $0000005B VOL: 0
; 0000 0063     {
; 0000 0064         if(i >= 6)
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0065         {
; 0000 0066             i = 0;
;PCODE: $0000005F VOL: 0
; 0000 0067             j++;
;PCODE: $00000060 VOL: 0
; 0000 0068             if(j == 90)
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 0069             {
; 0000 006A                 j = 0;
;PCODE: $00000064 VOL: 0
; 0000 006B                 k++;
;PCODE: $00000065 VOL: 0
; 0000 006C             }
; 0000 006D         }
;PCODE: $00000066 VOL: 0
; 0000 006E         OCR1AL = p;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 006F         if(t1 >= 244)
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0070         {
; 0000 0071             t1 = 0;
;PCODE: $0000006D VOL: 0
; 0000 0072             p += 25;
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 0073         }
; 0000 0074 
; 0000 0075         display = digit[j / 10];
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0076         com = 0xfb; //1111 1011
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 0077         delay_us(250);
;PCODE: $0000007B VOL: 0
; 0000 0078         com = 0xff;
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 0079         display = digit[j % 10];
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 007A         com = 0xf7; //1111 0111
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 007B         delay_us(250);
;PCODE: $00000087 VOL: 0
; 0000 007C         com = 0xff;
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
; 0000 007D 
; 0000 007E         display = digit[k / 10];
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 007F         com = 0xfe; //1111 1110
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0080         delay_us(250);
;PCODE: $00000093 VOL: 0
; 0000 0081         com = 0xff;
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0082         display = digit[k % 10];
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0083         com = 0xfd; //1111 1101
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0084         delay_us(250);
;PCODE: $0000009F VOL: 0
; 0000 0085         com = 0xff;
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 0086     }//End While(1)
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
; 0000 0087 }//End manin()
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
