;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 3/4/2022
;Author  : Matin Golpayegani
;Company :
;Comments:
;
;
;Chip type               : ATmega32
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 512
;*******************************************************/
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;void main(void)
; 0000 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001E 
; 0000 001F char h = 0b10001001;
; 0000 0020 char e = 0b10000110;
; 0000 0021 char l = 0b11000111;
; 0000 0022 char p = 0b10001100;
; 0000 0023 int d,i;
; 0000 0024 
; 0000 0025 // Port C initialization
; 0000 0026 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0027 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000000E VOL: 0
;	h -> R17
;	e -> R16
;	l -> R19
;	p -> R18
;	d -> R20,R21
;	i -> Y+0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 0028 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0029 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 002A 
; 0000 002B // Port D initialization
; 0000 002C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 002D DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 002E // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 002F PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0030 
; 0000 0031 d = 10;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0032 
; 0000 0033 while (1)
;PCODE: $00000021 VOL: 0
; 0000 0034       {
; 0000 0035       for(i=0;i<25;i++){
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0036           PORTD = 1;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0037           PORTC = h;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0038           delay_ms(d);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0039           PORTD = 2;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003A           PORTC = e;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 003B           delay_ms(d);
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 003C           PORTD = 4;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 003D           PORTC = l;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 003E           delay_ms(d);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 003F           PORTD = 8;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0040           PORTC = p;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0041           delay_ms(d);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 0042       }
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 0043       PORTD = 0;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0044       delay_ms(1000);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0045       }
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0046 }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
