;//           ******************************************************
;//          **   Processor      : ATMEGA 32                       **
;//         ***   Frequency      : 8MHz External Clock             ***
;//        ****   AUTHOR         : Reza Adinepour                  ****
;//        ****   Linkedin       : linkedin.com/reza_adinepour/    ****
;//         ***   Student ID:    : 9814303                         ***
;//          **   Github         : github.com/reza_adinepour/      **
;//           ******************************************************
;
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;#define on 1
;#define off 0
;
;#define TLLR PORTA.0
;#define TLLY PORTA.1
;#define TLLG PORTA.2
;
;#define TLRR PORTA.3
;#define TLRY PORTA.4
;#define TLRG PORTA.5
;
;
;void main(void)
; 0000 001C {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001D     DDRA = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 001E     PORTA = 0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 001F 
; 0000 0020     DDRB = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0021     PORTB = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0022 
; 0000 0023     DDRC = 0xff;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0024     PORTC = 0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0025 
; 0000 0026     DDRD = 0xff;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0027     PORTD = 0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0028 
; 0000 0029 
; 0000 002A     while (1)
;PCODE: $0000001E VOL: 0
; 0000 002B     {
; 0000 002C         PORTA = 0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002D 
; 0000 002E         TLLG = TLRR = on;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002F         delay_ms(8000);
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0030         TLLG = off;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0031 
; 0000 0032         TLLY = on;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0033         delay_ms(2000);
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0034         TLLY = TLRR = off;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0035 
; 0000 0036         TLLR = TLRY = on;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0037         delay_ms(2000);
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0038         TLRY = off;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0039 
; 0000 003A         TLRG = on;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 003B         delay_ms(8000);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 003C         TLRG = TLLR = off;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 003D     }//end while
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 003E }//end main
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
