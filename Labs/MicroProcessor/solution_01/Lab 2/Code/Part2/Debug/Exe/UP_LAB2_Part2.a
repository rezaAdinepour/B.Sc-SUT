;//           ******************************************************
;//          **   Processor      : ATMEGA 32                       **
;//         ***   Frequency      : 8MHz External Clock             ***
;//        ****   AUTHOR         : Reza Adinepour                  ****
;//        ****   Linkedin       : linkedin.com/reza_adinepour/    ****
;//         ***   Student ID:    : 9814303                         ***
;//          **   Github         : github.com/reza_adinepour/      **
;//           ******************************************************
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;
;unsigned char digit[10] = {0x3F, 0x06, 0x5B, 0x4F, 0x66, 0x6D, 0x7D, 0x07, 0x7F, 0x6F};

	.DSEG
;int i;
;
;void main(void)
; 0000 0012 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0013     DDRA = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0014     PORTA = 0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0015 
; 0000 0016     DDRB = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0017     PORTB = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0018 
; 0000 0019     DDRC = 0xff;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 001A     PORTC = 0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001B 
; 0000 001C     DDRD = 0xff;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001D     PORTD = 0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001E 
; 0000 001F     while (1)
;PCODE: $0000001E VOL: 0
; 0000 0020     {
; 0000 0021         PORTC = 0x21;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0022         for(i = 7; i >= 0; i--)
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0023         {
; 0000 0024             PORTD = digit[i + 2];
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0025             PORTB = digit[i];
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0026             delay_ms(1000);
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0027         }
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0028 
; 0000 0029         PORTC = 0x11;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002A         for(i = 1; i >= 0; i--)
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002B         {
; 0000 002C             PORTD = digit[i];
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 002D             PORTB = digit[i];
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 002E             delay_ms(1000);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 002F         }
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0030 
; 0000 0031         PORTC = 0x0c;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0032         for(i = 7; i >= 0; i--)
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0033         {
; 0000 0034             PORTB = digit[i + 2];
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0035             PORTD = digit[i];
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
; 0000 0036             delay_ms(1000);
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 0037         }
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0038 
; 0000 0039         PORTC = 0x0a;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 003A         for(i = 1; i >= 0; i--)
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 003B         {
; 0000 003C             PORTB = digit[i];
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 003D             PORTD = digit[i];
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 003E             delay_ms(1000);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 003F         }
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 0040     }//end while
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0041 }//end main
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
