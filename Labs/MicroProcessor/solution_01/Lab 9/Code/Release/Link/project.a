;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include <stdio.h>
;#include <lcd.h>
;
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x1B ;PORTA
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0008 #endasm
;
;unsigned long int timer0_ov;
;unsigned long int freq;
;unsigned char lcd_buff[20];
;
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 000F {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0010 timer0_ov ++;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0011 }
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;
;void main(void)
; 0000 0014 {
;PCODE: $00000019 VOL: 0
; 0000 0015 
; 0000 0016 // Timer/Counter 0 initialization
; 0000 0017 // Clock source: T0 pin Falling Edge
; 0000 0018 // Mode: Normal top=FFh
; 0000 0019 // OC0 output: Disconnected
; 0000 001A TCNT0=0x00;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001B OCR0=0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001C TCCR0=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 001D 
; 0000 001E // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 001F TIMSK=0x01;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0020 
; 0000 0021 // LCD module initialization
; 0000 0022 lcd_init(16);
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 0023 
; 0000 0024 while (1)
;PCODE: $00000024 VOL: 0
; 0000 0025 {
; 0000 0026       TCCR0=0x06;     // Start Timer T0 pin Falling Edge
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0027       #asm("sei")     // Global enable interrupts
;PCODE: $00000027 VOL: 0
	sei
;PCODE: $00000028 VOL: 0
; 0000 0028       delay_ms(1000);
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0029       #asm("cli");    // Global disable interrupts
;PCODE: $0000002B VOL: 0
	cli
;PCODE: $0000002C VOL: 0
; 0000 002A       freq = timer0_ov * 256 + TCNT0;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002B       if (freq<=999){
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 002C       sprintf(lcd_buff,"Freqency=%d",freq);
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002D       lcd_clear();
;PCODE: $00000043 VOL: 0
; 0000 002E       lcd_puts(lcd_buff);
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 002F       }
; 0000 0030       else{
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 0031       freq=freq/1000;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 0032       sprintf(lcd_buff,"Freqency=%d",freq);
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0033       lcd_clear();
;PCODE: $00000057 VOL: 0
; 0000 0034       lcd_puts(lcd_buff);
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0035       }
;PCODE: $0000005A VOL: 0
; 0000 0036       TCCR0=0x00;    //Stopt Timer0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0037       timer0_ov=0;   //Prepare for next count
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0038       TCNT0=0;       //Clear Timer0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0039       };
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 003A }
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
