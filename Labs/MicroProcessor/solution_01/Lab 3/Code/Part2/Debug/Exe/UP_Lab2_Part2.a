;//           ******************************************************
;//          **   Processor      : ATMEGA 32                       **
;//         ***   Frequency      : 8MHz External Clock             ***
;//        ****   AUTHOR         : Reza Adinepour                  ****
;//        ****   Linkedin       : linkedin.com/reza_adinepour/    ****
;//         ***   Student ID:    : 9814303                         ***
;//          **   Github         : github.com/reza_adinepour/      **
;//           ******************************************************
;
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;
;unsigned char help[] = {0x89, 0x86, 0xc7, 0x8c}, i;

	.DSEG
;
;void main(void)
; 0000 0011 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0012     DDRA = 0xff;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0013     PORTA = 0x00;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0014 
; 0000 0015     DDRB = 0xff;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0016     PORTB = 0x00;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 0017 
; 0000 0018     DDRC = 0xff;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0019     PORTC = 0x00;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 001A 
; 0000 001B     DDRD = 0xff;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 001C     PORTD = 0x00;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 001D 
; 0000 001E 
; 0000 001F     while (1)
;PCODE: $0000001E VOL: 0
; 0000 0020     {
; 0000 0021         for(i = 0; i < 25; i++)
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0022         {
; 0000 0023             PORTA = 0x01;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 0024             PORTB = help[0];
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0025             delay_ms(10);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 0026 
; 0000 0027             PORTA = 0x02;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0028             PORTB = help[1];
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0029             delay_ms(10);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 002A 
; 0000 002B             PORTA = 0x04;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 002C             PORTB = help[2];
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 002D             delay_ms(10);
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 002E 
; 0000 002F             PORTA = 0x08;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0030             PORTB = help[3];
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 0031             delay_ms(10);
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0032         }
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0033         PORTA = 0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0034         delay_ms(1000);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0035 
; 0000 0036 
; 0000 0037 
; 0000 0038 
; 0000 0039     }
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 003A }
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
