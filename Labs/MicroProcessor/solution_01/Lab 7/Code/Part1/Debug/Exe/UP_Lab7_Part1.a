;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0004 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0005     TCNT1H=0xFCE0 >> 8;
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
; 0000 0006     TCNT1L=0xFCE0 & 0xff;
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 0007 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;
;void main(void)
; 0000 000A {
;PCODE: $00000016 VOL: 0
; 0000 000B     DDRA = 0x00;
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
; 0000 000C     PORTA = 0x00;
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
; 0000 000D 
; 0000 000E     DDRB = 0x00;
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 000F     PORTB = 0x00;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
; 0000 0010 
; 0000 0011     DDRC = 0x00;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 0012     PORTC = 0x00;
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
; 0000 0013 
; 0000 0014     DDRD = 0x20;
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0015     PORTD = 0x00;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0016 
; 0000 0017 
; 0000 0018 
; 0000 0019     TCCR0=(0<<WGM00) | (0<<COM01) | (0<<COM00) | (0<<WGM01) | (0<<CS02) | (0<<CS01) | (0<<CS00);
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 001A     TCNT0=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 001B     OCR0=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 001C 
; 0000 001D 
; 0000 001E     TCCR1A=(0<<COM1A1) | (1<<COM1A0) | (0<<COM1B1) | (0<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 001F     TCCR1B=(0<<ICNC1) | (0<<ICES1) | (0<<WGM13) | (0<<WGM12) | (0<<CS12) | (0<<CS11) | (1<<CS10);
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0020     TCNT1H=0xFC;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0021     TCNT1L=0xE0;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0022     ICR1H=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0023     ICR1L=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0024     OCR1AH=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0025     OCR1AL=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0026     OCR1BH=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0027     OCR1BL=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0028 
; 0000 0029 
; 0000 002A     ASSR=0<<AS2;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 002B     TCCR2=(0<<PWM2) | (0<<COM21) | (0<<COM20) | (0<<CTC2) | (0<<CS22) | (0<<CS21) | (0<<CS20);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 002C     TCNT2=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 002D     OCR2=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 002E 
; 0000 002F     // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 0030     TIMSK=(0<<OCIE2) | (0<<TOIE2) | (0<<TICIE1) | (0<<OCIE1A) | (0<<OCIE1B) | (1<<TOIE1) | (0<<OCIE0) | (0<<TOIE0);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0031 
; 0000 0032     MCUCR=(0<<ISC11) | (0<<ISC10) | (0<<ISC01) | (0<<ISC00);
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0033     MCUCSR=(0<<ISC2);
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0034 
; 0000 0035     UCSRB=(0<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (0<<RXEN) | (0<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0036 
; 0000 0037     ACSR=(1<<ACD) | (0<<ACBG) | (0<<ACO) | (0<<ACI) | (0<<ACIE) | (0<<ACIC) | (0<<ACIS1) | (0<<ACIS0);
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0038     SFIOR=(0<<ACME);
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 0039 
; 0000 003A     // ADC initialization
; 0000 003B     // ADC disabled
; 0000 003C     ADCSRA=(0<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (0<<ADPS1) | (0<<ADPS0);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 003D 
; 0000 003E     // SPI initialization
; 0000 003F     // SPI disabled
; 0000 0040     SPCR=(0<<SPIE) | (0<<SPE) | (0<<DORD) | (0<<MSTR) | (0<<CPOL) | (0<<CPHA) | (0<<SPR1) | (0<<SPR0);
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0041 
; 0000 0042     // TWI initialization
; 0000 0043     // TWI disabled
; 0000 0044     TWCR=(0<<TWEA) | (0<<TWSTA) | (0<<TWSTO) | (0<<TWEN) | (0<<TWIE);
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 0045 
; 0000 0046     // Global enable interrupts
; 0000 0047     #asm("sei")
;PCODE: $0000005B VOL: 0
	sei
;PCODE: $0000005C VOL: 0
; 0000 0048 
; 0000 0049     while (1)
;PCODE: $0000005D VOL: 0
; 0000 004A     {
; 0000 004B 
; 0000 004C     }
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 004D }
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
