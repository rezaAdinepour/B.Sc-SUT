;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 2/15/2020
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8535
;Program type            : Application
;AVR Core Clock frequency: 4.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*******************************************************/
;
;#include <mega8535.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;// Declare your global variables here
;
;void main(void)
; 0000 001D {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 001E unsigned char HELP[]={0x89, 0x86, 0xC7, 0x8C};
; 0000 001F unsigned char seven[]={0x01, 0x02, 0x04, 0x08};
; 0000 0020 int i=0;
; 0000 0021 int j=0;
; 0000 0022 bit flag=0;
; 0000 0023 
; 0000 0024 // Input/Output Ports initialization
; 0000 0025 // Port A initialization
; 0000 0026 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0027 DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;	HELP -> Y+4
;	seven -> Y+0
;	i -> R16,R17
;	j -> R18,R19
;	flag -> R15.0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 0028 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0029 PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 002A 
; 0000 002B // Port B initialization
; 0000 002C // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 002D DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (1<<DDB3) | (1<<DDB2) | (1<<DDB1) | (1<<DDB0);
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002E // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 002F PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0030 
; 0000 0031 // Port C initialization
; 0000 0032 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0033 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0034 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 0035 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0036 
; 0000 0037 // Port D initialization
; 0000 0038 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
; 0000 0039 DDRD=(1<<DDD7) | (1<<DDD6) | (1<<DDD5) | (1<<DDD4) | (1<<DDD3) | (1<<DDD2) | (1<<DDD1) | (1<<DDD0);
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 003A // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
; 0000 003B PORTD=(0<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 003C 
; 0000 003D while (1)
;PCODE: $00000034 VOL: 0
; 0000 003E       {
; 0000 003F            if (i==0){
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0040                PORTA=0x01;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 0041                PORTB=HELP[0];
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 0042                delay_ms(1000);
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0043                i=1;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0044                }
; 0000 0045 
; 0000 0046            if (i==1){
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0047                PORTA=0x01;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0048                PORTB=HELP[0];
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0049                delay_us(100);
;PCODE: $00000047 VOL: 0
; 0000 004A                j++;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
; 0000 004B                PORTA=0x02;
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
; 0000 004C                PORTB=HELP[1];
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 004D                delay_us(100);
;PCODE: $0000004E VOL: 0
; 0000 004E                j++;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 004F 
; 0000 0050                if (j==10000){
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0051                     i=2;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0052                     j=0;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0053                }}
;PCODE: $00000058 VOL: 0
; 0000 0054 
; 0000 0055             if (i==2){
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0056                PORTA=0x01;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0057                PORTB=HELP[0];
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0058                delay_us(100);
;PCODE: $00000061 VOL: 0
; 0000 0059                j++;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
; 0000 005A 
; 0000 005B                PORTA=0x02;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 005C                PORTB=HELP[1];
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 005D                delay_us(100);
;PCODE: $00000068 VOL: 0
; 0000 005E                j++;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 005F 
; 0000 0060                PORTA=0x04;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0061                PORTB=HELP[2];
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 0062                delay_us(100);
;PCODE: $0000006F VOL: 0
; 0000 0063                j++;
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0064 
; 0000 0065                 if (j==10000){
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 0066                     i=3;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 0067                     j=0;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 0068                }
; 0000 0069 
; 0000 006A             }
;PCODE: $00000079 VOL: 0
; 0000 006B 
; 0000 006C              if (i==3){
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
; 0000 006D                PORTA=0x01;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 006E                PORTB=HELP[0];
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 006F                delay_us(100);
;PCODE: $00000082 VOL: 0
; 0000 0070                j++;
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 0071 
; 0000 0072                PORTA=0x02;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0073                PORTB=HELP[1];
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0074                delay_us(100);
;PCODE: $00000089 VOL: 0
; 0000 0075                j++;
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 0076 
; 0000 0077                PORTA=0x04;
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
; 0000 0078                PORTB=HELP[2];
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
; 0000 0079                delay_us(100);
;PCODE: $00000090 VOL: 0
; 0000 007A                j++;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 007B 
; 0000 007C                PORTA=0x08;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 007D                PORTB=HELP[3];
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
; 0000 007E                delay_us(100);
;PCODE: $00000097 VOL: 0
; 0000 007F                j++;
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0080 
; 0000 0081                if (j==10000){
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0082                     i=4;
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0083                     j=0;
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0084                }
; 0000 0085 
; 0000 0086 
; 0000 0087             }
;PCODE: $000000A1 VOL: 0
; 0000 0088 
; 0000 0089              if (i==4){
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 008A 
; 0000 008B                PORTA=0x02;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 008C                PORTB=HELP[1];
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
; 0000 008D                delay_us(100);
;PCODE: $000000AA VOL: 0
; 0000 008E                j++;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 008F 
; 0000 0090                PORTA=0x04;
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
; 0000 0091                PORTB=HELP[2];
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 0092                delay_us(100);
;PCODE: $000000B1 VOL: 0
; 0000 0093                j++;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0094 
; 0000 0095                PORTA=0x08;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0096                PORTB=HELP[3];
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0097                delay_us(100);
;PCODE: $000000B8 VOL: 0
; 0000 0098                j++;
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0099 
; 0000 009A                if (j==10000){
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 009B                     i=5;
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 009C                     j=0;
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 009D                }
; 0000 009E 
; 0000 009F             }
;PCODE: $000000C2 VOL: 0
; 0000 00A0 
; 0000 00A1              if (i==5){
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 00A2 
; 0000 00A3                PORTA=0x04;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 00A4                PORTB=HELP[2];
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00A5                delay_us(100);
;PCODE: $000000CB VOL: 0
; 0000 00A6                j++;
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 00A7 
; 0000 00A8                PORTA=0x08;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 00A9                PORTB=HELP[3];
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00AA                delay_us(100);
;PCODE: $000000D2 VOL: 0
; 0000 00AB                j++;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
; 0000 00AC 
; 0000 00AD                if (j==10000){
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00AE                     i=6;
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00AF                     j=0;
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 00B0                }
; 0000 00B1 
; 0000 00B2             }
;PCODE: $000000DC VOL: 0
; 0000 00B3 
; 0000 00B4              if (i==6){
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00B5 
; 0000 00B6                PORTA=0x08;
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00B7                PORTB=HELP[3];
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
; 0000 00B8                delay_ms(0100);
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00B9                i=0;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00BA                j=0;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00BB 
; 0000 00BC             }
; 0000 00BD 
; 0000 00BE 
; 0000 00BF       }
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
; 0000 00C0 }
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
